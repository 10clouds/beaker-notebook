{
    "beaker": "2",
    "evaluators": [
        {
            "name": "Html",
            "plugin": "Html",
            "view": {
                "cm": {
                    "mode": "htmlmixed"
                }
            }
        },
        {
            "name": "Latex",
            "plugin": "Latex",
            "view": {
                "cm": {
                    "mode": "stex"
                }
            }
        },
        {
            "name": "JavaScript",
            "plugin": "JavaScript",
            "jsSetting2": "",
            "jsSetting1": "",
            "view": {
                "cm": {
                    "mode": "javascript",
                    "background": "#FFE0F0"
                }
            }
        },
        {
            "name": "Groovy",
            "plugin": "Groovy",
            "view": {
                "cm": {
                    "mode": "groovy"
                }
            },
            "imports": "com.twosigma.beaker.NamespaceClient\ncom.twosigma.beaker.BeakerProgressUpdate\ncom.twosigma.beaker.chart.Color\ncom.twosigma.beaker.chart.xychart.*\ncom.twosigma.beaker.chart.xychart.plotitem.*"
        }
    ],
    "cells": [
        {
            "id": "section001",
            "type": "section",
            "level": 1,
            "title": "Groovy Basics",
            "collapsed": false,
            "evaluatorReader": false
        },
        {
            "id": "textxxB2hY",
            "type": "text",
            "body": [
                "Groovy is a script version of Java. &nbsp;You can use it to access the contents of any JAR, which you can include via the preferences in the Plugin Manager.<div>Groovy comes included with Beaker, so it should just work.</div>"
            ],
            "evaluatorReader": false
        },
        {
            "id": "code001",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "//semicolons are optional",
                    "def str = \"look, no semicolon!\""
                ]
            },
            "output": {
                "selectedType": "Text",
                "elapsedTime": 75,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "ab2644a1-0984-4781-8769-7c5b6f2cc1be"
            },
            "evaluatorReader": true,
            "lineCount": 2
        },
        {
            "id": "codeapvWRa",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "//parentheses are optional",
                    "System.out.println \"hey!\"",
                    "println \"no System.out either!\""
                ]
            },
            "output": {
                "selectedType": "Results",
                "elapsedTime": 73,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "ab2644a1-0984-4781-8769-7c5b6f2cc1be"
            },
            "evaluatorReader": true,
            "lineCount": 3
        },
        {
            "id": "codeYA0hzd",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "//== is .equals()",
                    "",
                    "//don't do this in Java!",
                    "\"A\" == \"ABC\".substring(0,1)"
                ]
            },
            "output": {
                "selectedType": "Text",
                "elapsedTime": 69,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "ab2644a1-0984-4781-8769-7c5b6f2cc1be"
            },
            "evaluatorReader": true,
            "lineCount": 4
        },
        {
            "id": "codeW8rmdq",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "//decimals are big",
                    "",
                    "1.0.getClass().getName()"
                ]
            },
            "output": {
                "selectedType": "Text",
                "elapsedTime": 66,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "ab2644a1-0984-4781-8769-7c5b6f2cc1be"
            },
            "evaluatorReader": true,
            "lineCount": 3
        },
        {
            "id": "codemxtCOw",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "1 && true //nonzero is true"
                ]
            },
            "output": {
                "selectedType": "Text",
                "elapsedTime": 58,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "ab2644a1-0984-4781-8769-7c5b6f2cc1be"
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "codevxLgiE",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "0 && true //0 is false"
                ]
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 67,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "ab2644a1-0984-4781-8769-7c5b6f2cc1be"
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "codeLgdRz3",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "\"\" && true //empty string is false"
                ]
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 74,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "ab2644a1-0984-4781-8769-7c5b6f2cc1be"
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "codeHCnRSP",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "null && true //null is false"
                ]
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 73,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "ab2644a1-0984-4781-8769-7c5b6f2cc1be"
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "codeeMpGqR",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "//Quotes",
                    "",
                    "\"Mixing 'single' and double quotes\"",
                    "'backward \"mixing\" quotes'",
                    "",
                    "\"\"\"Multiline",
                    "quotes",
                    "\"\"\""
                ]
            },
            "output": {
                "selectedType": "Text",
                "elapsedTime": 63,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "ab2644a1-0984-4781-8769-7c5b6f2cc1be"
            },
            "evaluatorReader": true,
            "lineCount": 8
        },
        {
            "id": "codei73N64",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "//lists",
                    "",
                    "l = [1,2] //initialization",
                    "l << 3 //adding elements",
                    "l -= 2 //remove",
                    "l += [5,7] //concat",
                    "l[2] //access",
                    "l[-1] //negative indeces"
                ]
            },
            "output": {
                "selectedType": "Text",
                "elapsedTime": 65,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "ab2644a1-0984-4781-8769-7c5b6f2cc1be"
            },
            "evaluatorReader": true,
            "lineCount": 8
        },
        {
            "id": "codesK5YMS",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "//maps",
                    "",
                    "m = [a:1, b:2] //initialize",
                    "m.c = 3 //add",
                    "m['d'] = 4 //add",
                    "m.a //access",
                    "m['c'] //access"
                ]
            },
            "output": {
                "selectedType": "Text",
                "elapsedTime": 59,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "ab2644a1-0984-4781-8769-7c5b6f2cc1be"
            },
            "evaluatorReader": true,
            "lineCount": 7
        },
        {
            "id": "codeTJqURJ",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "//closures",
                    "",
                    "c = {a, b ->",
                    "  a + b //return statement optional",
                    "}",
                    "",
                    "c(3,5)"
                ]
            },
            "output": {
                "selectedType": "Text",
                "elapsedTime": 103,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "ab2644a1-0984-4781-8769-7c5b6f2cc1be"
            },
            "evaluatorReader": true,
            "lineCount": 7
        },
        {
            "id": "code9iHRwo",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "c = {",
                    " it + 1 //first arg automatically named it ",
                    "}",
                    "",
                    "c(2)"
                ]
            },
            "output": {
                "selectedType": "Text",
                "elapsedTime": 59,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "ab2644a1-0984-4781-8769-7c5b6f2cc1be"
            },
            "evaluatorReader": true,
            "lineCount": 5
        },
        {
            "id": "code6vyHse",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "//iterating collections and closures as arguments",
                    "",
                    "s = ''",
                    "[1,2,3].each {",
                    "   s += it + ' '",
                    "}",
                    "s"
                ]
            },
            "output": {
                "selectedType": "Text",
                "elapsedTime": 57,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "ab2644a1-0984-4781-8769-7c5b6f2cc1be"
            },
            "evaluatorReader": true,
            "lineCount": 7
        },
        {
            "id": "codeLpzig0",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "//collect",
                    "",
                    "[1,2,3].collect {",
                    "\tit + 1 ",
                    "}"
                ]
            },
            "output": {
                "selectedType": "Text",
                "elapsedTime": 57,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "ab2644a1-0984-4781-8769-7c5b6f2cc1be"
            },
            "evaluatorReader": true,
            "lineCount": 5
        },
        {
            "id": "code6Hw88v",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "//exception handling is optional",
                    "",
                    "//this wouldn't compile in Java",
                    "def r = new FileReader(\"\")"
                ]
            },
            "output": {
                "selectedType": "BeakerDisplay",
                "elapsedTime": 52,
                "pluginName": "Groovy",
                "shellId": "ab2644a1-0984-4781-8769-7c5b6f2cc1be",
                "state": {}
            },
            "evaluatorReader": true,
            "lineCount": 4
        }
    ]
}
