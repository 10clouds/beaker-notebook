{
    "beaker": "2",
    "evaluators": [
        {
            "name": "Html",
            "plugin": "Html",
            "view": {
                "cm": {
                    "mode": "htmlmixed"
                }
            }
        },
        {
            "name": "Latex",
            "plugin": "Latex",
            "view": {
                "cm": {
                    "mode": "stex"
                }
            }
        },
        {
            "name": "JavaScript",
            "plugin": "JavaScript",
            "jsSetting2": "",
            "jsSetting1": "",
            "view": {
                "cm": {
                    "mode": "javascript",
                    "background": "#FFE0F0"
                }
            }
        },
        {
            "name": "Groovy",
            "plugin": "Groovy",
            "view": {
                "cm": {
                    "mode": "groovy"
                }
            },
            "imports": "graxxia.*\ncom.twosigma.beaker.NamespaceClient\ncom.twosigma.beaker.BeakerProgressUpdate\ncom.twosigma.beaker.chart.Color\ncom.twosigma.beaker.chart.xychart.*\ncom.twosigma.beaker.chart.xychart.plotitem.*\ncom.twosigma.beaker.chart.legend.*\ncom.twosigma.beaker.chart.Filter\ncom.twosigma.beaker.easyform.*\ncom.twosigma.beaker.easyform.formitem.*"
        }
    ],
    "cells": [
        {
            "id": "section001",
            "type": "section",
            "level": 1,
            "title": "Groovy Examples",
            "collapsed": false,
            "evaluatorReader": false
        },
        {
            "id": "markdownkufwpC",
            "type": "markdown",
            "body": [
                "Groovy is the language that should have been called JavaScript because it is a scripting version of Java.",
                "You can use it to access the contents of any JAR, which you can include via the classpath in the Language Manager.",
                "",
                "Groovy comes included with Beaker, so it should just work."
            ],
            "evaluatorReader": false
        },
        {
            "id": "codelwaUwX",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "def a = 1 //local variable",
                    "b = 2 //global variable"
                ]
            },
            "output": {
                "selectedType": "Text",
                "elapsedTime": 595,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "776c4f0d-b824-4c75-879b-7370357a50ff"
            },
            "evaluatorReader": true,
            "lineCount": 2
        },
        {
            "id": "codeiXI4Hu",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "a //error"
                ]
            },
            "output": {
                "selectedType": "BeakerDisplay",
                "elapsedTime": 616,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "776c4f0d-b824-4c75-879b-7370357a50ff"
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "codeZsp72T",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "b //this works"
                ]
            },
            "output": {
                "selectedType": "Text",
                "elapsedTime": 622,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "776c4f0d-b824-4c75-879b-7370357a50ff"
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "codeyiu160",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "//closure example",
                    "timesTwo = {x -> x*2}"
                ]
            },
            "output": {
                "selectedType": "Text",
                "elapsedTime": 627,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "776c4f0d-b824-4c75-879b-7370357a50ff"
            },
            "evaluatorReader": true,
            "lineCount": 2
        },
        {
            "id": "code0SVic5",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "timesTwo(4)"
                ]
            },
            "output": {
                "selectedType": "Text",
                "elapsedTime": 623,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "776c4f0d-b824-4c75-879b-7370357a50ff"
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "codexiOErG",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "timesTwo(\"Multiplying Strings!\")"
                ]
            },
            "output": {
                "selectedType": "Text",
                "elapsedTime": 625,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "776c4f0d-b824-4c75-879b-7370357a50ff"
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "code77FYkc",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "l = [1,2,3,4] //list",
                    "m = [a:1, b:2] //map"
                ]
            },
            "output": {
                "selectedType": "Table",
                "elapsedTime": 618,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "776c4f0d-b824-4c75-879b-7370357a50ff"
            },
            "evaluatorReader": true,
            "lineCount": 2
        },
        {
            "id": "codeKIMiDC",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "// Like most languages, output normally appears in the cell output and",
                    "// is saved in the notebook.",
                    "println(\"standard output\")"
                ]
            },
            "output": {
                "state": {},
                "selectedType": "Results",
                "pluginName": "Groovy",
                "shellId": "776c4f0d-b824-4c75-879b-7370357a50ff",
                "elapsedTime": 589
            },
            "evaluatorReader": true,
            "lineCount": 3
        },
        {
            "id": "codehp1B5U",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "// But if you set the followin preference, then output is directed to a panel that opens up",
                    "// and collects all ouput like a log, and is not saved in the notebook.",
                    "// The preference itself is not saved in the notebook.",
                    "beaker.prefs.useOutputPanel = false",
                    "// After running this cell, run the above cell again."
                ]
            },
            "output": {
                "state": {},
                "selectedType": "Hidden",
                "pluginName": "JavaScript",
                "elapsedTime": 27
            },
            "evaluatorReader": true,
            "lineCount": 5
        },
        {
            "id": "codeUAzxIm",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "// Normally the output that appears in cell output is limited to 1000 lines.",
                    "// Set this preference to change that limit.",
                    "beaker.prefs.outputLineLimit = 10000 "
                ]
            },
            "output": {
                "state": {},
                "selectedType": "Text",
                "pluginName": "JavaScript",
                "elapsedTime": 26
            },
            "evaluatorReader": true,
            "lineCount": 3
        }
    ],
    "namespace": {}
}
