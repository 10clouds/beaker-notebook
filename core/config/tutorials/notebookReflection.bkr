{
    "beaker": "2",
    "evaluators": [
        {
            "name": "Html",
            "plugin": "Html",
            "view": {
                "cm": {
                    "mode": "htmlmixed"
                }
            }
        },
        {
            "name": "Latex",
            "plugin": "Latex",
            "view": {
                "cm": {
                    "mode": "stex"
                }
            }
        },
        {
            "name": "JavaScript",
            "plugin": "JavaScript",
            "jsSetting2": "",
            "jsSetting1": "",
            "view": {
                "cm": {
                    "mode": "javascript",
                    "background": "#FFE0F0"
                }
            }
        },
        {
            "name": "Groovy",
            "plugin": "Groovy",
            "imports": "com.twosigma.beaker.NamespaceClient\ncom.twosigma.beaker.BeakerProgressUpdate\ncom.twosigma.beaker.chart.Color\ncom.twosigma.beaker.chart.xychart.*\ncom.twosigma.beaker.chart.xychart.plotitem.*\ngraxxia.*\ncom.twosigma.beaker.chart.legend.*\ncom.twosigma.beaker.chart.Filter\ncom.twosigma.beaker.easyform.*\ncom.twosigma.beaker.easyform.formitem.*",
            "view": {
                "cm": {
                    "mode": "groovy"
                }
            }
        }
    ],
    "cells": [
        {
            "id": "sectionDDj4qT",
            "type": "section",
            "title": "Notebook reflection API",
            "level": 1,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "markdownsmvpfy",
            "type": "markdown",
            "body": [
                "Beaker provides an API that allows to programmatically access (and modify) the notebook from a JavaScript or JVM based language cell.",
                "",
                "At the moment this API allows only basic changes of code cells. The functions provided are:",
                "",
                "* getEvaluators() - returns a list of all loaded language plugin names",
                "",
                "* getCodeCells(filter) - returns a list of Objects containing information about all code cells matching the filter, which can be empty (for all code cells), a cell name, a tag name or a language plugin name.",
                "",
                "* setCodeCellBody(name,code) - allows to programmatically change the code inside another cell.",
                "",
                "* setCodeCellEvaluator(name, eval) - allows to change the language plugin used to evaluate a code cell.",
                "",
                "* setCodeCellTags(name, tags) - allows to change the tags associated with a named cell.",
                "",
                "Execute the following two cells to see how this works",
                ""
            ],
            "evaluatorReader": false,
            "mode": "preview"
        },
        {
            "id": "codeQi2Ect",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "// this call returns all code cells that have the tag 'mytag'",
                    "JSON.stringify(beaker.getCodeCells('mytag'))"
                ]
            },
            "output": {
                "state": {},
                "selectedType": "Text",
                "result": "[{\"cellId\":\"code8FSM5W\",\"evaluatorId\":\"Groovy\",\"code\":\"// change the following cell type\\nbeaker.setCodeCellEvaluator('celltochange','Html')\\n// set a new body\\nbeaker.setCodeCellBody('celltochange','<h1>This is the new content</h1>')\\n// execute it\\nbeaker.evaluate('celltochange')\\n\",\"tags\":\"mytag\",\"output\":\"pending\",\"type\":\"BeakerCodeCell\"},{\"cellId\":\"celltochange\",\"evaluatorId\":\"Latex\",\"code\":\"\",\"tags\":\"mytag\",\"output\":\"pending\",\"type\":\"BeakerCodeCell\"}]",
                "pluginName": "JavaScript",
                "elapsedTime": 32
            },
            "evaluatorReader": true,
            "lineCount": 2
        },
        {
            "id": "code8FSM5W",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "// change the following cell type",
                    "beaker.setCodeCellEvaluator('celltochange','Html')",
                    "// set a new body",
                    "beaker.setCodeCellBody('celltochange','<h1>This is the new content</h1>')",
                    "// execute it",
                    "beaker.evaluate('celltochange')",
                    ""
                ]
            },
            "output": {
                "state": {},
                "selectedType": "Hidden",
                "elapsedTime": 612,
                "pluginName": "Groovy",
                "shellId": "dffee301-33b6-4899-be7a-94102b9797e8"
            },
            "evaluatorReader": true,
            "lineCount": 7,
            "tags": "mytag"
        },
        {
            "id": "celltochange",
            "type": "code",
            "evaluator": "Html",
            "input": {
                "body": [
                    "<h1>This is the new content</h1>"
                ]
            },
            "output": {
                "state": {},
                "selectedType": "BeakerDisplay",
                "elapsedTime": 34,
                "result": {
                    "type": "BeakerDisplay",
                    "innertype": "Latex",
                    "object": ""
                }
            },
            "evaluatorReader": true,
            "tags": "mytag",
            "lineCount": 1
        }
    ],
    "namespace": {},
    "metadata": {
        "publication-id": "560cbc09-a649-4ada-971b-20a3d46eab82"
    }
}
