{
    "beaker": "2",
    "evaluators": [
        {
            "name": "Html",
            "plugin": "Html",
            "view": {
                "cm": {
                    "mode": "htmlmixed"
                }
            }
        },
        {
            "name": "Latex",
            "plugin": "Latex",
            "view": {
                "cm": {
                    "mode": "stex"
                }
            }
        },
        {
            "name": "IPython",
            "plugin": "IPython",
            "imports": "",
            "supplementalClassPath": "",
            "view": {
                "cm": {
                    "mode": "python"
                }
            },
            "setup": "%matplotlib inline\nimport numpy\nimport matplotlib\nfrom matplotlib import pylab, mlab, pyplot\nnp = numpy\nplt = pyplot\nfrom IPython.display import display\nfrom IPython.core.pylabtools import figsize, getfigs\nfrom pylab import *\nfrom numpy import *\n"
        },
        {
            "name": "JavaScript",
            "plugin": "JavaScript",
            "jsSetting2": "",
            "jsSetting1": "",
            "view": {
                "cm": {
                    "mode": "javascript",
                    "background": "#FFE0F0"
                }
            }
        },
        {
            "name": "R",
            "plugin": "R",
            "view": {
                "cm": {
                    "mode": "r"
                }
            }
        },
        {
            "name": "Groovy",
            "plugin": "Groovy",
            "view": {
                "cm": {
                    "mode": "groovy"
                }
            },
            "imports": "com.twosigma.beaker.chart.Color\ncom.twosigma.beaker.chart.xychart.*\ncom.twosigma.beaker.chart.xychart.plotitem.*\ncom.twosigma.beaker.NamespaceClient\ncom.twosigma.beaker.BeakerProgressUpdate\ngraxxia.*\ncom.twosigma.beaker.chart.legend.*\ncom.twosigma.beaker.chart.Filter\ncom.twosigma.beaker.easyform.*\ncom.twosigma.beaker.easyform.formitem.*"
        }
    ],
    "cells": [
        {
            "id": "section001",
            "type": "section",
            "level": 1,
            "title": "Autotranslation: communicating among languages",
            "collapsed": false,
            "evaluatorReader": false
        },
        {
            "id": "markdownDHSZsp",
            "type": "markdown",
            "body": [
                "Beaker can autotranslate variables in one language to another.  You can access this feature with the notebook namespace: a collection of variables and their values stored in the notebook. ",
                "",
                "You can use this to produce data in one language, and consume or process it in another.",
                "",
                "Because the namespace is in the notebook, the variable's values are preserved when you save a notebook to disk, or share it on the web.  The format for data interchange is JSON.",
                "",
                "The languages that are supported include IPython, Python3, R, Java, Groovy, Scala, KDB and JavaScript."
            ],
            "evaluatorReader": false
        },
        {
            "id": "sectionhUw6oj",
            "type": "section",
            "title": "Basic Examples",
            "level": 2,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "codeMXyZnW",
            "type": "code",
            "evaluator": "IPython",
            "input": {
                "body": [
                    "beaker.x = \"Strings work fine\""
                ]
            },
            "output": {
                "selectedType": "BeakerDisplay",
                "outputArrived": false,
                "elapsedTime": 486,
                "state": {},
                "pluginName": "IPython",
                "shellId": "13BE1E064DAD4452882E0E235EE77005"
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "codeGNNbIg",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "beaker.x"
                ]
            },
            "output": {
                "selectedType": "Text",
                "state": {},
                "result": "Strings work fine",
                "pluginName": "JavaScript",
                "elapsedTime": 26
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "markdownyE4nwZ",
            "type": "markdown",
            "body": [
                "In R you need to call a function:"
            ],
            "evaluatorReader": false
        },
        {
            "id": "code4NkMTF",
            "type": "code",
            "evaluator": "R",
            "input": {
                "body": [
                    "beaker::get('x')"
                ]
            },
            "output": {
                "selectedType": "Text",
                "elapsedTime": 729,
                "state": {},
                "pluginName": "R",
                "shellId": "93269344-8759-4ef0-85a4-f4e08e8b28b4",
                "dataresult": [
                    "Strings work fine"
                ],
                "result": "[1] \"Strings work fine\""
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "markdown5W1Krm",
            "type": "markdown",
            "body": [
                "In Groovy, you can either call a function, or access the namespace as properties:"
            ],
            "evaluatorReader": false
        },
        {
            "id": "codeL7598T",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "beaker.get('x') + beaker.x"
                ]
            },
            "output": {
                "selectedType": "Text",
                "elapsedTime": 776,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "3a933b32-452c-4b76-8b54-111eeae6ba23",
                "result": "Strings work fineStrings work fine"
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "markdownUSyGLw",
            "type": "markdown",
            "body": [
                "Nested data structures and arrays are supported:"
            ],
            "evaluatorReader": false
        },
        {
            "id": "codeuP2kh6",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "beaker.y = {a:1, b:2.2, c:\"three\", d:[4, 5, 6]};"
                ]
            },
            "output": {
                "selectedType": "Text",
                "state": {},
                "result": {
                    "a": 1,
                    "b": 2.2,
                    "c": "three",
                    "d": [
                        4,
                        5,
                        6
                    ]
                },
                "pluginName": "JavaScript",
                "elapsedTime": 29
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "codeeLdoVF",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "beaker.y"
                ]
            },
            "output": {
                "selectedType": "Text",
                "elapsedTime": 770,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "3a933b32-452c-4b76-8b54-111eeae6ba23",
                "result": {
                    "a": 1,
                    "b": 2.2,
                    "c": "three",
                    "d": [
                        4,
                        5,
                        6
                    ]
                }
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "sectionWXeHmf",
            "type": "section",
            "title": "Scalars in R",
            "level": 2,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "markdownwOKXV7",
            "type": "markdown",
            "body": [
                "A quirk of the R language is that there are no scalars, everything is a vector.  So \"10\" is really an array of length one, written \"[10]\" in most other languages. ",
                "",
                "Scalars imported to R from the notebook namespace are transformed into vectors."
            ],
            "evaluatorReader": false
        },
        {
            "id": "codeEh6ibk",
            "type": "code",
            "evaluator": "R",
            "input": {
                "body": [
                    "beaker::set('z', 12)"
                ]
            },
            "output": {
                "selectedType": "Text",
                "elapsedTime": 671,
                "state": {},
                "pluginName": "R",
                "shellId": "93269344-8759-4ef0-85a4-f4e08e8b28b4",
                "dataresult": [
                    12
                ],
                "result": "[1] 12"
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "codeNydW3I",
            "type": "code",
            "evaluator": "IPython",
            "input": {
                "body": [
                    "beaker.z"
                ]
            },
            "output": {
                "outputArrived": true,
                "selectedType": "Html",
                "elapsedTime": 215,
                "state": {},
                "pluginName": "IPython",
                "shellId": "177760DEB3404CB6B4633A5792EDBCFE",
                "dataresult": [
                    12
                ],
                "result": "<div class=\"output_subarea output_text\"><pre>[12]</pre></div>"
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "code3eQahz",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "beaker.z[0] * 2"
                ]
            },
            "output": {
                "outputArrived": true,
                "selectedType": "Text",
                "elapsedTime": 588,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "0bb454cc-d2a5-41d0-be3b-949f987ae8d2",
                "result": 24
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "markdown3pn8H8",
            "type": "markdown",
            "body": [
                "In reverse, it has no problems translating scalars from other languages to R vectors:"
            ],
            "evaluatorReader": false
        },
        {
            "id": "codeKBVTUw",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "beaker.zz = 13"
                ]
            },
            "output": {
                "selectedType": "Text",
                "elapsedTime": 573,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "0bb454cc-d2a5-41d0-be3b-949f987ae8d2",
                "result": 13
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "codeOU5Hsk",
            "type": "code",
            "evaluator": "R",
            "input": {
                "body": [
                    "beaker::get('zz')"
                ]
            },
            "output": {
                "selectedType": "Text",
                "elapsedTime": 568,
                "state": {},
                "pluginName": "R",
                "shellId": "c58cdf2d-e020-43e0-ad8e-13b8712528a9",
                "dataresult": [
                    13
                ],
                "result": "[1] 13"
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "section21LFDr",
            "type": "section",
            "title": "Data Frames",
            "level": 2,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "markdown6TYGqA",
            "type": "markdown",
            "body": [
                "An important complex structure in R and Python's Pandas library is the Data Frame, essentially a table with named columns.  They go through autotranslation like so:"
            ],
            "evaluatorReader": false
        },
        {
            "id": "codetsCQ0F",
            "type": "code",
            "evaluator": "IPython",
            "input": {
                "body": [
                    "import pandas",
                    "beaker.df = pandas.DataFrame(np.random.randn(6, 4), columns=list('ABCD'))"
                ]
            },
            "output": {
                "outputArrived": false,
                "selectedType": "Hidden",
                "elapsedTime": 472,
                "state": {},
                "pluginName": "IPython",
                "shellId": "13BE1E064DAD4452882E0E235EE77005"
            },
            "evaluatorReader": true,
            "lineCount": 2
        },
        {
            "id": "markdownboT2sk",
            "type": "markdown",
            "body": [
                "In JVM based languages, which lack a Data Frame type, they are internally represented as a Table Display object:"
            ],
            "evaluatorReader": false
        },
        {
            "id": "codeKUuJGm",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "def o = beaker.df",
                    "System.out.println(o.getClass().getName())",
                    "o"
                ]
            },
            "output": {
                "selectedType": "Results",
                "elapsedTime": 688,
                "state": {},
                "pluginName": "Groovy",
                "shellId": "3a933b32-452c-4b76-8b54-111eeae6ba23",
                "result": {
                    "type": "Results",
                    "outputdata": [
                        {
                            "type": "out",
                            "value": "com.twosigma.beaker.jvm.object.TableDisplay\n"
                        }
                    ],
                    "payload": {
                        "type": "TableDisplay",
                        "columnNames": [
                            "A",
                            "B",
                            "C",
                            "D"
                        ],
                        "values": [
                            [
                                0.7072993647273229,
                                -0.00878859773469719,
                                -0.23775748968154622,
                                -0.46420701161420164
                            ],
                            [
                                -0.41579799600867945,
                                0.033680604164924126,
                                -0.717272456732219,
                                1.1879372640759602
                            ],
                            [
                                -0.4971195225546703,
                                2.3619243064906383,
                                -0.2577153097839779,
                                -2.156595669734426
                            ],
                            [
                                -0.09541759856694453,
                                0.1962939033518576,
                                -2.112203915039125,
                                0.6611234805357671
                            ],
                            [
                                1.423842174320983,
                                0.8025992461682266,
                                0.0216607385547771,
                                1.0142392828171571
                            ],
                            [
                                0.22354545058745098,
                                0.26393930825873696,
                                0.7597429720366727,
                                0.813852638313162
                            ]
                        ],
                        "types": [
                            "double",
                            "double",
                            "double",
                            "double"
                        ],
                        "subtype": "TableDisplay"
                    }
                }
            },
            "evaluatorReader": true,
            "lineCount": 3
        },
        {
            "id": "markdownRp3DrT",
            "type": "markdown",
            "body": [
                "Auto-translating a data frame between languages that support it (such as R and Python) is fully automatic."
            ],
            "evaluatorReader": false
        },
        {
            "id": "codej0d66h",
            "type": "code",
            "evaluator": "R",
            "input": {
                "body": [
                    "beaker::get('df')"
                ]
            },
            "output": {
                "selectedType": "Table",
                "elapsedTime": 673,
                "state": {
                    "datatablestate": {
                        "pagination": {
                            "use": true,
                            "rowsToDisplay": 50,
                            "fixLeft": false,
                            "fixRight": false
                        },
                        "columnNames": [
                            "A",
                            "B",
                            "C",
                            "D"
                        ],
                        "actualalign": [
                            "R",
                            "R",
                            "R",
                            "R"
                        ],
                        "colorder": [
                            0,
                            1,
                            2,
                            3,
                            4
                        ],
                        "getCellSho": [
                            true,
                            true,
                            true,
                            true
                        ]
                    }
                },
                "pluginName": "R",
                "shellId": "93269344-8759-4ef0-85a4-f4e08e8b28b4",
                "result": {
                    "type": "TableDisplay",
                    "subtype": "TableDisplay",
                    "hasIndex": "true",
                    "columnNames": [
                        "Index",
                        "A",
                        "B",
                        "C",
                        "D"
                    ],
                    "values": [
                        [
                            0,
                            0.7073,
                            -0.0087886,
                            -0.23776,
                            -0.46421
                        ],
                        [
                            1,
                            -0.4158,
                            0.033681,
                            -0.71727,
                            1.1879
                        ],
                        [
                            2,
                            -0.49712,
                            2.3619,
                            -0.25772,
                            -2.1566
                        ],
                        [
                            3,
                            -0.095418,
                            0.19629,
                            -2.1122,
                            0.66112
                        ],
                        [
                            4,
                            1.4238,
                            0.8026,
                            0.021661,
                            1.0142
                        ],
                        [
                            5,
                            0.22355,
                            0.26394,
                            0.75974,
                            0.81385
                        ]
                    ],
                    "types": [
                        "integer",
                        "double",
                        "double",
                        "double",
                        "double"
                    ]
                }
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "codeIkZtDp",
            "type": "code",
            "evaluator": "R",
            "input": {
                "body": [
                    "beaker::set('df2', data.frame(matrix(rnorm(20), nrow=10)))"
                ]
            },
            "output": {
                "selectedType": "Table",
                "elapsedTime": 689,
                "state": {
                    "datatablestate": {
                        "pagination": {
                            "use": true,
                            "rowsToDisplay": 50,
                            "fixLeft": false,
                            "fixRight": false
                        },
                        "columnNames": [
                            "X1",
                            "X2"
                        ],
                        "actualalign": [
                            "R",
                            "R"
                        ],
                        "colorder": [
                            0,
                            1,
                            2
                        ],
                        "getCellSho": [
                            true,
                            true
                        ]
                    }
                },
                "pluginName": "R",
                "shellId": "93269344-8759-4ef0-85a4-f4e08e8b28b4",
                "result": {
                    "type": "TableDisplay",
                    "subtype": "TableDisplay",
                    "hasIndex": "true",
                    "columnNames": [
                        "Index",
                        "X1",
                        "X2"
                    ],
                    "values": [
                        [
                            1,
                            0.4842,
                            0.5998
                        ],
                        [
                            2,
                            1.0363,
                            -0.15445
                        ],
                        [
                            3,
                            -0.90953,
                            -1.9543
                        ],
                        [
                            4,
                            1.5058,
                            1.6769
                        ],
                        [
                            5,
                            -0.076586,
                            -1.3805
                        ],
                        [
                            6,
                            -1.3823,
                            -2.1607
                        ],
                        [
                            7,
                            -0.65148,
                            0.067134
                        ],
                        [
                            8,
                            -1.4989,
                            -1.7136
                        ],
                        [
                            9,
                            0.47959,
                            -1.2507
                        ],
                        [
                            10,
                            0.11028,
                            -0.42351
                        ]
                    ],
                    "types": [
                        "integer",
                        "double",
                        "double"
                    ]
                }
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "codeNYJvKz",
            "type": "code",
            "evaluator": "IPython",
            "input": {
                "body": [
                    "print type(beaker.df2)",
                    "beaker.df2"
                ]
            },
            "output": {
                "outputArrived": true,
                "selectedType": "Results",
                "elapsedTime": 400,
                "state": {},
                "pluginName": "IPython",
                "shellId": "13BE1E064DAD4452882E0E235EE77005",
                "result": {
                    "type": "Results",
                    "outputdata": [
                        {
                            "type": "out",
                            "value": "<class 'pandas.core.frame.DataFrame'>\n"
                        }
                    ],
                    "payload": {
                        "columnNames": [
                            "Index",
                            "X1",
                            "X2"
                        ],
                        "subtype": "TableDisplay",
                        "values": [
                            [
                                1,
                                0.4842,
                                0.5998
                            ],
                            [
                                2,
                                1.0363,
                                -0.15445
                            ],
                            [
                                3,
                                -0.90953,
                                -1.9543
                            ],
                            [
                                4,
                                1.5058,
                                1.6769
                            ],
                            [
                                5,
                                -0.076586,
                                -1.3805
                            ],
                            [
                                6,
                                -1.3823,
                                -2.1607
                            ],
                            [
                                7,
                                -0.65148,
                                0.067134
                            ],
                            [
                                8,
                                -1.4989,
                                -1.7136
                            ],
                            [
                                9,
                                0.47959,
                                -1.2507
                            ],
                            [
                                10,
                                0.11028,
                                -0.42351
                            ]
                        ],
                        "hasIndex": "true",
                        "type": "TableDisplay",
                        "types": [
                            "integer",
                            "double",
                            "double"
                        ]
                    }
                }
            },
            "evaluatorReader": true,
            "lineCount": 2
        },
        {
            "id": "markdownFAMSnm",
            "type": "markdown",
            "body": [
                "Beaker provides a DataFrame object in Javascript as well: it mimics the Python Pandas version with a minimal set of functions:"
            ],
            "evaluatorReader": false
        },
        {
            "id": "codeMVbQlE",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "beaker.df2.toString()"
                ]
            },
            "output": {
                "state": {},
                "selectedType": "Text",
                "result": "DataFrame:  Rows: 10\n  Data columns (total 3 columns):\n    Index   integer *Index*\n    X1   double\n    X2   double\n",
                "pluginName": "JavaScript",
                "elapsedTime": 30
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "sectionZ2uJyW",
            "type": "section",
            "title": "Autotranslated types",
            "level": 2,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "markdownScGaZR",
            "type": "markdown",
            "body": [
                "Auto detected (and auto converted) data types that can be returned and/or stored in the beaker namespace are:",
                "* integers",
                "* floats and doubles",
                "* booleans",
                "* strings",
                "* dates and time",
                "* data frames - which are displayed using a data table",
                "* list of dictionaries of basic types - which are displayed using a data table",
                "* two dimensional array of basic types (matrix) - which are displayed using a data table",
                "* multi dimensional array of any supported data type",
                "* dictionary of basic types - which are displayed using a Key/Value data table",
                "* Beaker plots (JVM languages only)",
                "* Beaker Image (JVM language only)",
                "* Beaker OutputContainer - used to display multiple data from a cell",
                "* BeakerCodeCell",
                "* any containers of any supported type",
                "",
                ""
            ],
            "evaluatorReader": false
        },
        {
            "id": "code16S3aP",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "// Store a DataTable, an Image and a Matrix in the beaker object",
                    "beaker.dt = new com.twosigma.beaker.jvm.object.TableDisplay([ [1,2],[4,5] ], ['a','b'], ['integer','integer'])",
                    "",
                    "import java.awt.image.BufferedImage",
                    "BufferedImage i = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB)",
                    "g2 = i.createGraphics()",
                    "g2.drawLine(0,0,100,100)",
                    "beaker.img = i",
                    "beaker.matrix = [[1.5,2,3,0.3],[4,5,6,7], [7,8,9,10.3]]",
                    "''"
                ]
            },
            "output": {
                "state": {},
                "result": "",
                "selectedType": "Hidden",
                "pluginName": "Groovy",
                "shellId": "3a933b32-452c-4b76-8b54-111eeae6ba23",
                "elapsedTime": 1583
            },
            "evaluatorReader": true,
            "lineCount": 10
        },
        {
            "id": "codeXtRVUM",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "// Display the shared datatable",
                    "beaker.dt"
                ]
            },
            "output": {
                "state": {
                    "datatablestate": {
                        "pagination": {
                            "use": true,
                            "rowsToDisplay": 50,
                            "fixLeft": false,
                            "fixRight": false
                        },
                        "columnNames": [
                            "a",
                            "b"
                        ],
                        "actualalign": [
                            "R",
                            "R"
                        ],
                        "colorder": [
                            0,
                            1,
                            2
                        ],
                        "getCellSho": [
                            true,
                            true
                        ]
                    }
                },
                "result": {
                    "type": "TableDisplay",
                    "subtype": "TableDisplay",
                    "hasIndex": "false",
                    "values": [
                        [
                            1,
                            2
                        ],
                        [
                            4,
                            5
                        ]
                    ],
                    "types": [
                        "integer",
                        "integer"
                    ],
                    "columnNames": [
                        "a",
                        "b"
                    ]
                },
                "selectedType": "Table",
                "pluginName": "JavaScript",
                "elapsedTime": 25
            },
            "evaluatorReader": true,
            "lineCount": 2
        },
        {
            "id": "codeEMqWcS",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "// display the shared image",
                    "beaker.img"
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "type": "ImageIcon",
                    "imageData": "iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAIAAAD/gAIDAAAAkElEQVR42u3QMQEAAAwCIPuXdhX89kAE0jbsfPny5cuXL3z58uXLly98+fLlyxe+fPny5csXvnz58uXLly9fvnz58oUvX758+fKFL1++fPnCly9fvnz5wpcvX758+cKXL1++fOHLly9fvnzhy5cvX77w5cuXL1++8OXLly9fvvDly5cvX/jy5cuXL1/48vX6dU54KuTluc2vAAAAAElFTkSuQmCC",
                    "width": 100,
                    "height": 100
                },
                "selectedType": "Image",
                "pluginName": "JavaScript",
                "elapsedTime": 20
            },
            "evaluatorReader": true,
            "lineCount": 2
        },
        {
            "id": "codewMaJxB",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "// display the shared matrix",
                    "beaker.matrix"
                ]
            },
            "output": {
                "state": {
                    "datatablestate": {
                        "pagination": {
                            "use": true,
                            "rowsToDisplay": 50,
                            "fixLeft": false,
                            "fixRight": false
                        },
                        "columnNames": [
                            "c0",
                            "c1",
                            "c2",
                            "c3"
                        ],
                        "actualalign": [
                            "R",
                            "R",
                            "R",
                            "R"
                        ],
                        "colorder": [
                            0,
                            1,
                            2,
                            3,
                            4
                        ],
                        "getCellSho": [
                            true,
                            true,
                            true,
                            true
                        ]
                    }
                },
                "result": {
                    "type": "TableDisplay",
                    "values": [
                        [
                            1.5,
                            2,
                            3,
                            0.3
                        ],
                        [
                            4,
                            5,
                            6,
                            7
                        ],
                        [
                            7,
                            8,
                            9,
                            10.3
                        ]
                    ],
                    "subtype": "Matrix",
                    "columnNames": [
                        "c0",
                        "c1",
                        "c2",
                        "c3"
                    ],
                    "types": [
                        "double",
                        "double",
                        "double",
                        "double"
                    ]
                },
                "selectedType": "Table",
                "pluginName": "JavaScript",
                "elapsedTime": 26
            },
            "evaluatorReader": true,
            "lineCount": 2
        }
    ],
    "namespace": {
        "x": "Strings work fine",
        "y": {
            "a": 1,
            "b": 2.2,
            "c": "three",
            "d": [
                4,
                5,
                6
            ]
        },
        "z": [
            12
        ],
        "zz": 13,
        "df": {
            "columnNames": [
                "Index",
                "A",
                "B",
                "C",
                "D"
            ],
            "subtype": "TableDisplay",
            "values": [
                [
                    0,
                    0.7072993647273229,
                    -0.00878859773469719,
                    -0.23775748968154622,
                    -0.46420701161420164
                ],
                [
                    1,
                    -0.41579799600867945,
                    0.033680604164924126,
                    -0.717272456732219,
                    1.1879372640759602
                ],
                [
                    2,
                    -0.4971195225546703,
                    2.3619243064906383,
                    -0.2577153097839779,
                    -2.156595669734426
                ],
                [
                    3,
                    -0.09541759856694453,
                    0.1962939033518576,
                    -2.112203915039125,
                    0.6611234805357671
                ],
                [
                    4,
                    1.423842174320983,
                    0.8025992461682266,
                    0.0216607385547771,
                    1.0142392828171571
                ],
                [
                    5,
                    0.22354545058745098,
                    0.26393930825873696,
                    0.7597429720366727,
                    0.813852638313162
                ]
            ],
            "hasIndex": "true",
            "type": "TableDisplay",
            "types": [
                "integer",
                "double",
                "double",
                "double",
                "double"
            ]
        },
        "df2": {
            "type": "TableDisplay",
            "subtype": "TableDisplay",
            "hasIndex": "true",
            "values": [
                [
                    1,
                    0.4842,
                    0.5998
                ],
                [
                    2,
                    1.0363,
                    -0.15445
                ],
                [
                    3,
                    -0.90953,
                    -1.9543
                ],
                [
                    4,
                    1.5058,
                    1.6769
                ],
                [
                    5,
                    -0.076586,
                    -1.3805
                ],
                [
                    6,
                    -1.3823,
                    -2.1607
                ],
                [
                    7,
                    -0.65148,
                    0.067134
                ],
                [
                    8,
                    -1.4989,
                    -1.7136
                ],
                [
                    9,
                    0.47959,
                    -1.2507
                ],
                [
                    10,
                    0.11028,
                    -0.42351
                ]
            ],
            "types": [
                "integer",
                "double",
                "double"
            ],
            "columnNames": [
                "Index",
                "X1",
                "X2"
            ]
        },
        "dt": {
            "type": "TableDisplay",
            "subtype": "TableDisplay",
            "hasIndex": "false",
            "values": [
                [
                    1,
                    2
                ],
                [
                    4,
                    5
                ]
            ],
            "types": [
                "integer",
                "integer"
            ],
            "columnNames": [
                "a",
                "b"
            ]
        },
        "img": {
            "type": "ImageIcon",
            "imageData": "iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAIAAAD/gAIDAAAAkElEQVR42u3QMQEAAAwCIPuXdhX89kAE0jbsfPny5cuXL3z58uXLly98+fLlyxe+fPny5csXvnz58uXLly9fvnz58oUvX758+fKFL1++fPnCly9fvnz5wpcvX758+cKXL1++fOHLly9fvnzhy5cvX77w5cuXL1++8OXLly9fvvDly5cvX/jy5cuXL1/48vX6dU54KuTluc2vAAAAAElFTkSuQmCC",
            "width": 100,
            "height": 100
        },
        "matrix": {
            "type": "TableDisplay",
            "values": [
                [
                    1.5,
                    2,
                    3,
                    0.3
                ],
                [
                    4,
                    5,
                    6,
                    7
                ],
                [
                    7,
                    8,
                    9,
                    10.3
                ]
            ],
            "subtype": "Matrix",
            "columnNames": [
                "c0",
                "c1",
                "c2",
                "c3"
            ],
            "types": [
                "double",
                "double",
                "double",
                "double"
            ]
        }
    },
    "metadata": {
        "publication-id": "560b5722-f287-43a3-b48d-f6ab06befc8f"
    }
}
