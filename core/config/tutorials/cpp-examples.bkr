{
    "beaker": "2",
    "evaluators": [
        {
            "name": "HTML",
            "plugin": "HTML",
            "view": {
                "cm": {
                    "mode": "htmlmixed"
                }
            }
        },
        {
            "name": "TeX",
            "plugin": "TeX",
            "view": {
                "cm": {
                    "mode": "stex"
                }
            }
        },
        {
            "name": "JavaScript",
            "plugin": "JavaScript",
            "jsSetting2": "",
            "jsSetting1": "",
            "view": {
                "cm": {
                    "mode": "javascript",
                    "background": "#FFE0F0"
                }
            }
        },
        {
            "name": "C++",
            "plugin": "C++",
            "imports": "",
            "view": {
                "cm": {
                    "mode": "text/x-c++src"
                }
            },
            "flags": ""
        }
    ],
    "cells": [
        {
            "id": "sectionUFrCJG",
            "type": "section",
            "title": "C++ Examples",
            "level": 1,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "markdowngo27FF",
            "type": "markdown",
            "body": [
                "Beaker's [C++](https://en.wikipedia.org/wiki/C%2B%2B) support is great for linking with and calling into libraries like [OpenCV](http://opencv.org/),",
                "or Google's [OR-Tools](https://developers.google.com/optimization/?hl=en).",
                "",
                "[Windows is not yet supported](https://github.com/twosigma/beaker-notebook/issues/2542), unfortunately."
            ],
            "evaluatorReader": false
        },
        {
            "id": "code5XX0in",
            "type": "code",
            "evaluator": "C++",
            "input": {
                "body": [
                    "// A basic C++ cell",
                    "// define a beaker_main function with an optional parameter for the return value",
                    "#include <iostream>",
                    "void beaker_main(){",
                    "  std::cout << \"Hello world!\" << std::endl;",
                    "  return;",
                    "}"
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "type": "Results",
                    "outputdata": [
                        {
                            "type": "out",
                            "value": "Hello world!\n"
                        }
                    ]
                },
                "selectedType": "Results",
                "pluginName": "C++",
                "shellId": "2ac634d1-1e39-4d90-9510-bc4975ab27e5",
                "elapsedTime": 1731,
                "height": 35
            },
            "evaluatorReader": true,
            "lineCount": 7
        },
        {
            "id": "codey0EVnd",
            "type": "code",
            "evaluator": "C++",
            "input": {
                "body": [
                    "// You can define functions",
                    "#include <string>",
                    "std::string distant;",
                    "void setDistant(){",
                    "  distant = std::string(\"This is far away\");",
                    "}"
                ]
            },
            "output": {
                "state": {},
                "selectedType": "Hidden",
                "pluginName": "C++",
                "shellId": "2ac634d1-1e39-4d90-9510-bc4975ab27e5",
                "elapsedTime": 945
            },
            "evaluatorReader": true,
            "lineCount": 6
        },
        {
            "id": "codevYfhgq",
            "type": "code",
            "evaluator": "C++",
            "input": {
                "body": [
                    "// and call functions defined in other C++ cells",
                    "#include <string>",
                    "#include <iostream>",
                    "extern std::string distant;",
                    "extern void setDistant();",
                    "",
                    "void beaker_main(std::string &ret){",
                    "  setDistant();",
                    "  ret = distant;",
                    "} "
                ]
            },
            "output": {
                "state": {},
                "result": "This is far away",
                "selectedType": "Text",
                "pluginName": "C++",
                "shellId": "2ac634d1-1e39-4d90-9510-bc4975ab27e5",
                "elapsedTime": 1751,
                "height": 36
            },
            "evaluatorReader": true,
            "lineCount": 10
        },
        {
            "id": "code2wlBSW",
            "type": "code",
            "evaluator": "C++",
            "input": {
                "body": [
                    "// You can store data in the Beaker Object",
                    "#include <string>",
                    "#include <vector>",
                    "void beaker_main(int &ret){",
                    "  std::map<std::string, std::vector<int> > test;",
                    "  test[\"a\"] = std::vector<int>(1,1);",
                    "  test[\"b\"] = std::vector<int>(2,2);",
                    "  test[\"c\"] = std::vector<int>(4,3);",
                    "  ",
                    "  ret = Beaker::set(\"x\", test);",
                    "}"
                ]
            },
            "output": {
                "state": {},
                "result": 1,
                "selectedType": "Text",
                "pluginName": "C++",
                "elapsedTime": 2526,
                "shellId": "2ac634d1-1e39-4d90-9510-bc4975ab27e5",
                "height": 36
            },
            "evaluatorReader": true,
            "lineCount": 11
        },
        {
            "id": "codeB3Dqi0",
            "type": "code",
            "evaluator": "C++",
            "input": {
                "body": [
                    "// You can read objects from the beaker namespace but,",
                    "// beinc C++, you must specify the type",
                    "#include <vector>",
                    "#include <string>",
                    "void beaker_main(std::map<std::string, std::vector<int> > &ret){",
                    "  Beaker::get(\"x\", ret);",
                    "}"
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "a": [
                        1
                    ],
                    "b": [
                        2,
                        2
                    ],
                    "c": [
                        3,
                        3,
                        3,
                        3
                    ]
                },
                "selectedType": "Text",
                "pluginName": "C++",
                "shellId": "2ac634d1-1e39-4d90-9510-bc4975ab27e5",
                "elapsedTime": 2611,
                "height": 36
            },
            "evaluatorReader": true,
            "lineCount": 7
        },
        {
            "id": "codeqDLV1T",
            "type": "code",
            "evaluator": "C++",
            "input": {
                "body": [
                    "// You can return hash tables and these are properly displayed",
                    "#include <vector>",
                    "#include <string>",
                    "void beaker_main(std::map<std::string, std::string > &ret){",
                    "  ret[\"a\"] = \"Alpha\";",
                    "  ret[\"b\"] = \"Beta\";",
                    "  ret[\"c\"] = \"Gamma\";",
                    "}"
                ]
            },
            "output": {
                "state": {
                    "datatablestate": {
                        "pagination": {
                            "use": true,
                            "rowsToDisplay": 50,
                            "fixLeft": 0,
                            "fixRight": 0
                        },
                        "columnNames": [
                            "Key",
                            "Value"
                        ],
                        "actualalign": [
                            "L",
                            "L"
                        ],
                        "colorder": [
                            0,
                            1,
                            2
                        ],
                        "getCellSho": [
                            true,
                            true
                        ]
                    }
                },
                "result": {
                    "type": "TableDisplay",
                    "columnNames": [
                        "Key",
                        "Value"
                    ],
                    "values": [
                        [
                            "a",
                            "Alpha"
                        ],
                        [
                            "b",
                            "Beta"
                        ],
                        [
                            "c",
                            "Gamma"
                        ]
                    ],
                    "subtype": "Dictionary"
                },
                "selectedType": "Table",
                "pluginName": "C++",
                "shellId": "2ac634d1-1e39-4d90-9510-bc4975ab27e5",
                "elapsedTime": 1535,
                "height": 136
            },
            "evaluatorReader": true,
            "lineCount": 8
        },
        {
            "id": "code4UVEpX",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "// autotranslation works",
                    "beaker.x"
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "a": [
                        1
                    ],
                    "b": [
                        2,
                        2
                    ],
                    "c": [
                        3,
                        3,
                        3,
                        3
                    ]
                },
                "selectedType": "Text",
                "pluginName": "JavaScript",
                "elapsedTime": 29,
                "height": 36
            },
            "evaluatorReader": true,
            "lineCount": 2
        }
    ],
    "namespace": {
        "hello": "world!",
        "x": {
            "a": [
                1
            ],
            "b": [
                2,
                2
            ],
            "c": [
                3,
                3,
                3,
                3
            ]
        },
        "y": {
            "a": [
                1,
                1,
                1
            ],
            "b": [
                2,
                2,
                2
            ],
            "c": [
                3,
                3,
                3
            ]
        }
    },
    "metadata": {
        "publication-id": "560b4ea6-5a57-4298-84e3-a3057c1ee4b4"
    }
}
