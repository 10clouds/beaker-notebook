{
    "beaker": "2",
    "evaluators": [
        {
            "name": "HTML",
            "plugin": "HTML",
            "view": {
                "cm": {
                    "mode": "htmlmixed"
                }
            }
        },
        {
            "name": "TeX",
            "plugin": "TeX",
            "view": {
                "cm": {
                    "mode": "stex"
                }
            }
        },
        {
            "name": "JavaScript",
            "plugin": "JavaScript",
            "jsSetting2": "",
            "jsSetting1": "",
            "view": {
                "cm": {
                    "mode": "javascript",
                    "background": "#FFE0F0"
                }
            },
            "languageVersion": "ES2015"
        },
        {
            "name": "Node",
            "plugin": "Node",
            "view": {
                "cm": {
                    "mode": "javascript"
                }
            }
        }
    ],
    "cells": [
        {
            "id": "sectionoEtULq",
            "type": "section",
            "title": "Node Server and JavaScript Client",
            "level": 1,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "markdownLn3DJ5",
            "type": "markdown",
            "body": [
                "[Node](https://nodejs.org/) is programmable in JavaScript and is powered by Chrome's V8 runtime, but runs on the server as a backend.",
                "Node uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices.",
                "This notebook shows how you can write a client and a server on the same page.",
                "Follow the [instructions](http://beakernotebook.com/getting-started#Node) for how to install Node so Beaker can find it."
            ],
            "evaluatorReader": false
        },
        {
            "id": "codeuBtnh9",
            "type": "code",
            "evaluator": "Node",
            "input": {
                "body": [
                    "if(server) server.close();",
                    "",
                    "var count = 0;",
                    "var server = http.createServer(function (request, response) {",
                    "  response.setHeader(\"Access-Control-Allow-Origin\", \"*\"); // See Issue #1397",
                    "  response.setHeader(\"Access-Control-Allow-Headers\", \"X-XSRF-TOKEN\");",
                    "  response.writeHead(200, {\"Content-Type\": \"text/plain\"});",
                    "  response.end(\"Hello from Node \" + count);",
                    "  count = count + 1;",
                    "});",
                    "",
                    "server.listen(8000);",
                    "\"server started\""
                ]
            },
            "output": {
                "state": {},
                "selectedType": "Text",
                "result": "server started",
                "height": 56
            },
            "evaluatorReader": true,
            "lineCount": 11
        },
        {
            "id": "codeYLvzUk",
            "type": "code",
            "evaluator": "HTML",
            "input": {
                "body": [
                    "<div id=\"message\"></div>"
                ]
            },
            "output": {
                "state": {},
                "selectedType": "BeakerDisplay",
                "elapsedTime": 0,
                "result": {
                    "type": "BeakerDisplay",
                    "innertype": "Html",
                    "object": "<script>\nvar beaker = bkHelper.getBeakerObject().beakerObj;\n</script>\n<div id=\"message\">Hello from Node 101</div>"
                },
                "height": 55
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "code5aRHZP",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "var ncalls = 0;",
                    "var startTime = new Date().getTime();",
                    "var deferred = beaker.newDeferred();",
                    "",
                    "var update = function () {",
                    "  $.get(\"http://127.0.0.1:8000\", function(response) {",
                    "    document.getElementById(\"message\").innerHTML = response;",
                    "    if (ncalls++ < 100)",
                    "      beaker.timeout(update, 0);",
                    "    else {",
                    "      var ms = (new Date().getTime() - startTime) / 100;",
                    "      deferred.resolve(ms + \"ms per HTTP call\");",
                    "    }",
                    "  });",
                    "};",
                    "update();",
                    "deferred"
                ]
            },
            "output": {
                "state": {},
                "selectedType": "Text",
                "result": "14.44ms per HTTP call",
                "pluginName": "JavaScript",
                "elapsedTime": 1514,
                "height": 56
            },
            "evaluatorReader": true,
            "lineCount": 17
        },
        {
            "id": "sectiontd8GQg",
            "type": "section",
            "title": "Chat with Socket.io",
            "level": 1,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "markdownf1vLqX",
            "type": "markdown",
            "body": [
                "You can load node modules using **require** function. It accepts module name/path string as an argument, so you can load packages by their relative or absolute path or by their name. Loading packages by name, you would probably like to specify path where your packages are installed. In language manager we have \"Modules path\" property for this purpose.     ",
                "In following Node cell, we use *require* method to load some modules. **Socket.io** package isn't bundled with Beaker so you have to install it manually using `npm install socket.io` and specify installation path in Node plugin's settings."
            ],
            "evaluatorReader": false
        },
        {
            "id": "codeCPioL1",
            "type": "code",
            "evaluator": "Node",
            "input": {
                "body": [
                    "if(closable) closable.close();",
                    "if(io) io.close();",
                    "var app = require('express')();",
                    "var http = require('http').Server(app);",
                    "var io = require('socket.io')(http);",
                    "",
                    "app.get('/', function(req, res){",
                    "  res.send(htmlResponse);",
                    "});",
                    "",
                    "var index = 1;",
                    "io.on('connection', function(socket){",
                    "  var userName = 'user' + index++;",
                    "  socket.emit('hello', userName);",
                    "  socket.on('chat message', function(msg){",
                    "    io.emit('chat message', {user: userName, text: msg});",
                    "  });",
                    "});",
                    "",
                    "var closable = http.listen(7788);",
                    "'running'"
                ]
            },
            "output": {},
            "evaluatorReader": true,
            "lineCount": 21
        },
        {
            "id": "codeTBLcVV",
            "type": "code",
            "evaluator": "HTML",
            "input": {
                "body": [
                    "<iframe src=\"http://localhost:7788\" width=600 height=400></iframe>",
                    "<iframe src=\"http://localhost:7788\" width=600 height=400></iframe>"
                ]
            },
            "output": {},
            "evaluatorReader": true,
            "lineCount": 2,
            "tags": "result-container"
        },
        {
            "id": "codeyG2ERW",
            "type": "code",
            "evaluator": "Node",
            "input": {
                "body": [
                    "var htmlResponse = \"<!doctype html>\" +",
                    "    \"<html>\" +",
                    "    \"  <head>\" +",
                    "    \"    <title>Socket.IO chat</title>\" +",
                    "    \"    <style>\" +",
                    "    \"      * { margin: 0; padding: 0; box-sizing: border-box; }\" +",
                    "    \"      body { font: 13px Helvetica, Arial; }\" +",
                    "    \"      form { background: #000; padding: 3px; position: fixed; bottom: 0; width: 100%; }\" +",
                    "    \"      form input { border: 0; padding: 10px; width: 90%; margin-right: .5%; }\" +",
                    "    \"      form button { width: 9%; background: rgb(130, 224, 255); border: none; padding: 10px; }\" +",
                    "    \"      #messages { list-style-type: none; margin: 0; padding: 0; }\" +",
                    "    \"      #messages li { padding: 5px 10px; }\" +",
                    "    \"      #messages li:nth-child(odd) { background: #eee; }\" +",
                    "    \"    </style>\" +",
                    "    \"  </head>\" +",
                    "    \"  <body>\" +",
                    "    \"    <ul id=\\\"messages\\\"></ul>\" +",
                    "    \"    <form action=\\\"\\\">\" +",
                    "    \"      <input id=\\\"m\\\" autocomplete=\\\"off\\\" /><button>Send</button>\" +",
                    "    \"    </form>\" +",
                    "    \"    <script src=\\\"https://cdn.socket.io/socket.io-1.2.0.js\\\"></script>\" +",
                    "    \"    <script src=\\\"http://code.jquery.com/jquery-1.11.1.js\\\"></script>\" +",
                    "    \"    <script>\" +",
                    "    \"      var socket = io();\" +",
                    "    \"      $('form').submit(function(){\" +",
                    "    \"        socket.emit('chat message', $('#m').val());\" +",
                    "    \"        $('#m').val('');\" +",
                    "    \"        return false;\" +",
                    "    \"      });\" +",
                    "    \"      var selfName = '';\" + ",
                    "    \"      socket.on('hello', function (name) {\" +           ",
                    "    \"        selfName = name;\" +           ",
                    "    \"      });\" +           ",
                    "    \"      socket.on('chat message', function(msg){\" +",
                    "    \"        $('#messages').append($('<li>').text((msg.user === selfName ? 'me' : msg.user) + ': ' + msg.text));\" +",
                    "    \"      });\" +",
                    "    \"    </script>\" +",
                    "    \"  </body>\" +",
                    "    \"</html>\";"
                ],
                "hidden": true
            },
            "output": {
                "state": {},
                "selectedType": "Text",
                "height": 55,
                "result": "undefined"
            },
            "evaluatorReader": true,
            "lineCount": 39,
            "initialization": true
        }
    ],
    "namespace": {
        "0": null
    },
    "metadata": {
        "publication-id": "560b4be1-2d91-497b-b84b-ec91cc2d5e17"
    }
}
