{
    "beaker": "2",
    "evaluators": [
        {
            "name": "HTML",
            "plugin": "HTML",
            "view": {
                "cm": {
                    "mode": "htmlmixed"
                }
            }
        },
        {
            "name": "JavaScript",
            "plugin": "JavaScript",
            "view": {
                "cm": {
                    "mode": "javascript",
                    "background": "#FFE0F0"
                }
            }
        },
        {
            "name": "Groovy",
            "plugin": "Groovy",
            "imports": "graxxia.*\ncom.twosigma.beaker.NamespaceClient\ncom.twosigma.beaker.BeakerProgressUpdate\ncom.twosigma.beaker.chart.Color\ncom.twosigma.beaker.chart.GradientColor\ncom.twosigma.beaker.chart.legend.*\ncom.twosigma.beaker.chart.Filter\ncom.twosigma.beaker.chart.xychart.*\ncom.twosigma.beaker.chart.xychart.plotitem.*\ncom.twosigma.beaker.chart.categoryplot.*\ncom.twosigma.beaker.chart.categoryplot.plotitem.*\ncom.twosigma.beaker.chart.histogram.*\ncom.twosigma.beaker.chart.treemap.*\ncom.twosigma.beaker.chart.treemap.util.*\nnet.sf.jtreemap.swing.*\ncom.twosigma.beaker.chart.heatmap.HeatMap\ncom.twosigma.beaker.jvm.object.*\ncom.twosigma.beaker.easyform.*\ncom.twosigma.beaker.easyform.formitem.*",
            "view": {
                "cm": {
                    "mode": "groovy"
                }
            }
        }
    ],
    "cells": [
        {
            "id": "sectionsQuXKB",
            "type": "section",
            "title": "Support 64 bit integers in tables and autotranslation",
            "level": 1,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "section4yu5xE",
            "type": "section",
            "title": "Table that contains long values",
            "level": 2,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "codeaOmhaj",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "",
                    "def today  = new Date()",
                    "def millis = today.time",
                    "def nanos  = millis * 1000 * 1000L ",
                    "",
                    "table = [[time: nanos + 7 * 1, closePrice_mean:88.59, highPrice_mean:88.91, lowPrice_mean:88.20, openPrice_mean:78.55],",
                    "         [time: nanos + 7 * 2, closePrice_mean:58.96, highPrice_mean:59.79, lowPrice_mean:58.11, openPrice_mean:58.93],",
                    "         [time: nanos + 7 * 3, closePrice_mean:39.09, highPrice_mean:39.96, lowPrice_mean:27.99, openPrice_mean:18.86]]",
                    "",
                    "beaker.table_with_longs = table",
                    "table"
                ]
            },
            "output": {
                "state": {
                    "datatablestate": {
                        "pagination": {
                            "use": true,
                            "rowsToDisplay": 50,
                            "fixLeft": 0,
                            "fixRight": 0
                        },
                        "columnNames": [
                            "time",
                            "closePrice_mean",
                            "highPrice_mean",
                            "lowPrice_mean",
                            "openPrice_mean"
                        ],
                        "actualalign": [
                            "L",
                            "R",
                            "R",
                            "R",
                            "R"
                        ],
                        "colorder": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5
                        ],
                        "getCellSho": [
                            true,
                            true,
                            true,
                            true,
                            true
                        ]
                    }
                },
                "result": {
                    "type": "TableDisplay",
                    "columnNames": [
                        "time",
                        "closePrice_mean",
                        "highPrice_mean",
                        "lowPrice_mean",
                        "openPrice_mean"
                    ],
                    "values": [
                        [
                            "1454587950582000007",
                            88.59,
                            88.91,
                            88.2,
                            78.55
                        ],
                        [
                            "1454587950582000014",
                            58.96,
                            59.79,
                            58.11,
                            58.93
                        ],
                        [
                            "1454587950582000021",
                            39.09,
                            39.96,
                            27.99,
                            18.86
                        ]
                    ],
                    "types": [
                        "int64",
                        "double",
                        "double",
                        "double",
                        "double"
                    ],
                    "subtype": "ListOfMaps"
                },
                "selectedType": "Table",
                "pluginName": "Groovy",
                "shellId": "3cee54cc-1bb5-49a8-aeba-0a139edb5db2",
                "elapsedTime": 565,
                "height": 156
            },
            "evaluatorReader": true,
            "lineCount": 11
        },
        {
            "id": "sectionfr3bA6",
            "type": "section",
            "title": "Table that contains big integer values",
            "level": 2,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "codeoVvVNi",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "def today  = new Date()",
                    "def millis = today.time",
                    "def nanos  = millis * 1000 * 1000g ",
                    "",
                    "table = [[time: nanos + 7 * 1, closePrice_mean:88.59, highPrice_mean:88.91, lowPrice_mean:88.20, openPrice_mean:78.55],",
                    "         [time: nanos + 7 * 2, closePrice_mean:58.96, highPrice_mean:59.79, lowPrice_mean:58.11, openPrice_mean:58.93],",
                    "         [time: nanos + 7 * 3, closePrice_mean:39.09, highPrice_mean:39.96, lowPrice_mean:27.99, openPrice_mean:18.86]]",
                    "",
                    "beaker.table_with_big_integers = table",
                    "table"
                ]
            },
            "output": {
                "result": {
                    "type": "TableDisplay",
                    "columnNames": [
                        "time",
                        "closePrice_mean",
                        "highPrice_mean",
                        "lowPrice_mean",
                        "openPrice_mean"
                    ],
                    "values": [
                        [
                            "1454587951265000007",
                            88.59,
                            88.91,
                            88.2,
                            78.55
                        ],
                        [
                            "1454587951265000014",
                            58.96,
                            59.79,
                            58.11,
                            58.93
                        ],
                        [
                            "1454587951265000021",
                            39.09,
                            39.96,
                            27.99,
                            18.86
                        ]
                    ],
                    "types": [
                        "bigint",
                        "double",
                        "double",
                        "double",
                        "double"
                    ],
                    "subtype": "ListOfMaps"
                },
                "selectedType": "Table",
                "pluginName": "Groovy",
                "shellId": "3cee54cc-1bb5-49a8-aeba-0a139edb5db2",
                "elapsedTime": 564,
                "state": {
                    "datatablestate": {
                        "pagination": {
                            "use": true,
                            "rowsToDisplay": 50,
                            "fixLeft": 0,
                            "fixRight": 0
                        },
                        "columnNames": [
                            "time",
                            "closePrice_mean",
                            "highPrice_mean",
                            "lowPrice_mean",
                            "openPrice_mean"
                        ],
                        "actualalign": [
                            "L",
                            "R",
                            "R",
                            "R",
                            "R"
                        ],
                        "colorder": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5
                        ],
                        "getCellSho": [
                            true,
                            true,
                            true,
                            true,
                            true
                        ]
                    }
                },
                "height": 156
            },
            "evaluatorReader": true,
            "lineCount": 10
        },
        {
            "id": "section9SaxlV",
            "type": "section",
            "title": "Autotranslation for a table that contains long values",
            "level": 2,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "codelBVsT5",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "beaker.table_with_longs"
                ]
            },
            "output": {
                "state": {
                    "datatablestate": {
                        "pagination": {
                            "use": true,
                            "rowsToDisplay": 50,
                            "fixLeft": 0,
                            "fixRight": 0
                        },
                        "columnNames": [
                            "openPrice_mean",
                            "closePrice_mean",
                            "time",
                            "lowPrice_mean",
                            "highPrice_mean"
                        ],
                        "actualalign": [
                            "R",
                            "R",
                            "L",
                            "R",
                            "R"
                        ],
                        "colorder": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5
                        ],
                        "getCellSho": [
                            true,
                            true,
                            true,
                            true,
                            true
                        ]
                    }
                },
                "result": {
                    "type": "TableDisplay",
                    "columnNames": [
                        "openPrice_mean",
                        "closePrice_mean",
                        "time",
                        "lowPrice_mean",
                        "highPrice_mean"
                    ],
                    "values": [
                        [
                            78.55,
                            88.59,
                            "1454587950582000007",
                            88.2,
                            88.91
                        ],
                        [
                            58.93,
                            58.96,
                            "1454587950582000014",
                            58.11,
                            59.79
                        ],
                        [
                            18.86,
                            39.09,
                            "1454587950582000021",
                            27.99,
                            39.96
                        ]
                    ],
                    "types": [
                        "double",
                        "double",
                        "int64",
                        "double",
                        "double"
                    ],
                    "subtype": "ListOfMaps"
                },
                "selectedType": "Table",
                "pluginName": "Groovy",
                "shellId": "3cee54cc-1bb5-49a8-aeba-0a139edb5db2",
                "elapsedTime": 572,
                "height": 156
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "section7EMhEc",
            "type": "section",
            "title": "Autotranslation for a table that contains big integer values",
            "level": 2,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "codeWmOT3I",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "beaker.table_with_big_integers"
                ]
            },
            "output": {
                "state": {
                    "datatablestate": {
                        "pagination": {
                            "use": true,
                            "rowsToDisplay": 50,
                            "fixLeft": 0,
                            "fixRight": 0
                        },
                        "columnNames": [
                            "openPrice_mean",
                            "closePrice_mean",
                            "time",
                            "lowPrice_mean",
                            "highPrice_mean"
                        ],
                        "actualalign": [
                            "R",
                            "R",
                            "L",
                            "R",
                            "R"
                        ],
                        "colorder": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5
                        ],
                        "getCellSho": [
                            true,
                            true,
                            true,
                            true,
                            true
                        ]
                    }
                },
                "result": {
                    "type": "TableDisplay",
                    "columnNames": [
                        "openPrice_mean",
                        "closePrice_mean",
                        "time",
                        "lowPrice_mean",
                        "highPrice_mean"
                    ],
                    "values": [
                        [
                            78.55,
                            88.59,
                            "1454587951265000007",
                            88.2,
                            88.91
                        ],
                        [
                            58.93,
                            58.96,
                            "1454587951265000014",
                            58.11,
                            59.79
                        ],
                        [
                            18.86,
                            39.09,
                            "1454587951265000021",
                            27.99,
                            39.96
                        ]
                    ],
                    "types": [
                        "double",
                        "double",
                        "bigint",
                        "double",
                        "double"
                    ],
                    "subtype": "ListOfMaps"
                },
                "selectedType": "Table",
                "pluginName": "Groovy",
                "shellId": "3cee54cc-1bb5-49a8-aeba-0a139edb5db2",
                "elapsedTime": 603,
                "height": 156
            },
            "evaluatorReader": true,
            "lineCount": 1
        }
    ],
    "namespace": {
        "t": {
            "type": "TableDisplay",
            "columnNames": [
                "time",
                "closePrice_mean",
                "highPrice_mean",
                "lowPrice_mean",
                "openPrice_mean"
            ],
            "values": [
                [
                    "1454587855504000007",
                    88.59,
                    88.91,
                    88.2,
                    78.55
                ],
                [
                    "1454587855504000014",
                    58.96,
                    59.79,
                    58.11,
                    58.93
                ],
                [
                    "1454587855504000021",
                    39.09,
                    39.96,
                    27.99,
                    18.86
                ]
            ],
            "types": [
                "bigint",
                "double",
                "double",
                "double",
                "double"
            ],
            "subtype": "ListOfMaps"
        },
        "table_with_longs": {
            "type": "TableDisplay",
            "columnNames": [
                "time",
                "closePrice_mean",
                "highPrice_mean",
                "lowPrice_mean",
                "openPrice_mean"
            ],
            "values": [
                [
                    "1454587950582000007",
                    88.59,
                    88.91,
                    88.2,
                    78.55
                ],
                [
                    "1454587950582000014",
                    58.96,
                    59.79,
                    58.11,
                    58.93
                ],
                [
                    "1454587950582000021",
                    39.09,
                    39.96,
                    27.99,
                    18.86
                ]
            ],
            "types": [
                "int64",
                "double",
                "double",
                "double",
                "double"
            ],
            "subtype": "ListOfMaps"
        },
        "table_with_big_integers": {
            "type": "TableDisplay",
            "columnNames": [
                "time",
                "closePrice_mean",
                "highPrice_mean",
                "lowPrice_mean",
                "openPrice_mean"
            ],
            "values": [
                [
                    "1454587951265000007",
                    88.59,
                    88.91,
                    88.2,
                    78.55
                ],
                [
                    "1454587951265000014",
                    58.96,
                    59.79,
                    58.11,
                    58.93
                ],
                [
                    "1454587951265000021",
                    39.09,
                    39.96,
                    27.99,
                    18.86
                ]
            ],
            "types": [
                "bigint",
                "double",
                "double",
                "double",
                "double"
            ],
            "subtype": "ListOfMaps"
        }
    }
}
