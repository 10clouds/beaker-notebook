{
    "beaker": "2",
    "evaluators": [
        {
            "name": "Html",
            "plugin": "Html",
            "view": {
                "cm": {
                    "mode": "htmlmixed"
                }
            }
        },
        {
            "name": "Latex",
            "plugin": "Latex",
            "view": {
                "cm": {
                    "mode": "stex"
                }
            }
        },
        {
            "name": "JavaScript",
            "plugin": "JavaScript",
            "jsSetting2": "",
            "jsSetting1": "",
            "view": {
                "cm": {
                    "mode": "javascript",
                    "background": "#FFE0F0"
                }
            }
        },
        {
            "name": "Java",
            "plugin": "Java",
            "imports": "com.twosigma.beaker.chart.Color\ncom.twosigma.beaker.chart.xychart.*\ncom.twosigma.beaker.chart.xychart.plotitem.*\ncom.twosigma.beaker.NamespaceClient",
            "view": {
                "cm": {
                    "mode": "text/x-java"
                }
            },
            "outdir": "$BEAKERDIR/classes"
        },
        {
            "name": "Groovy",
            "plugin": "Groovy",
            "imports": "com.twosigma.beaker.NamespaceClient\ncom.twosigma.beaker.chart.Color\ncom.twosigma.beaker.chart.xychart.*\ncom.twosigma.beaker.chart.xychart.plotitem.*",
            "view": {
                "cm": {
                    "mode": "groovy"
                }
            },
            "outdir": "$BEAKERDIR/classes"
        }
    ],
    "cells": [
        {
            "id": "section5Aa0fw",
            "type": "section",
            "title": "Java Examples",
            "level": 1,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "markdownWWNOxW",
            "type": "markdown",
            "body": [
                "Beaker supports Java cells that define classes, which can be used by other JVM based cells.",
                "One cell is equivalent to a Java compilation unit and can contain a single class.",
                ""
            ],
            "evaluatorReader": false,
            "mode": "preview"
        },
        {
            "id": "codeYv6rtU",
            "type": "code",
            "evaluator": "Java",
            "input": {
                "body": [
                    "package test.beaker;",
                    "",
                    "import java.util.Date;",
                    "",
                    "public class BeakerTest {",
                    "\tprivate Date _date;",
                    "  ",
                    "  public BeakerTest() {",
                    "    _date = new Date();",
                    "  }",
                    "  ",
                    "  public String getDateTxt() {",
                    "    return _date.toString();",
                    "  }",
                    "  ",
                    "  public String getDateUpperCaseTxt() {",
                    "    return _date.toString().toUpperCase();",
                    "  }",
                    "  ",
                    "}",
                    ""
                ]
            },
            "output": {
                "state": {},
                "result": "null",
                "selectedType": "Text",
                "elapsedTime": 623,
                "hidden": true
            },
            "evaluatorReader": true,
            "lineCount": 21
        },
        {
            "id": "markdownRNDmeB",
            "type": "markdown",
            "body": [
                "Java cells can also contain an executable function, that can optionally return a value.",
                ""
            ],
            "evaluatorReader": false,
            "mode": "preview"
        },
        {
            "id": "codesvwb39",
            "type": "code",
            "evaluator": "Java",
            "input": {
                "body": [
                    "package test.beaker;",
                    "",
                    "BeakerTest bt = new BeakerTest();",
                    "return bt.getDateTxt();"
                ]
            },
            "output": {
                "state": {},
                "result": "Wed Nov 19 14:30:06 EST 2014",
                "selectedType": "Text",
                "elapsedTime": 84
            },
            "evaluatorReader": true,
            "lineCount": 4
        },
        {
            "id": "markdownJ87re8",
            "type": "markdown",
            "body": [
                "The compiled classes can be used, for example, by groovy code.",
                ""
            ],
            "evaluatorReader": false,
            "mode": "preview"
        },
        {
            "id": "codeWRR4u2",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "package test.beaker;",
                    "",
                    "bt = new BeakerTest();",
                    "bt.getDateUpperCaseTxt();"
                ]
            },
            "output": {
                "state": {},
                "result": "WED NOV 19 14:31:55 EST 2014",
                "selectedType": "Text",
                "elapsedTime": 72
            },
            "evaluatorReader": true,
            "lineCount": 4
        },
        {
            "id": "markdownHWVtHn",
            "type": "markdown",
            "body": [
                "Autotranslation works correctly:",
                ""
            ],
            "evaluatorReader": false,
            "mode": "preview"
        },
        {
            "id": "codeHPHfmV",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": [
                    "beaker.autovariable = \"test for autotranslation\";"
                ]
            },
            "output": {
                "state": {},
                "result": "test for autotranslation",
                "selectedType": "Text",
                "hidden": true
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "codegJFKLk",
            "type": "code",
            "evaluator": "Java",
            "input": {
                "body": [
                    "try {",
                    "  return NamespaceClient.getBeaker().get(\"autovariable\");",
                    "} catch(Exception e) { }",
                    "return \"ERROR! autotranslation not working\";"
                ]
            },
            "output": {
                "state": {},
                "result": "test for autotranslation",
                "selectedType": "Text",
                "elapsedTime": 1464
            },
            "evaluatorReader": true,
            "lineCount": 4
        },
        {
            "id": "markdownXo5BnY",
            "type": "markdown",
            "body": [
                "And you can use the plot library to draw graphs in Java.",
                ""
            ],
            "evaluatorReader": false,
            "mode": "preview"
        },
        {
            "id": "codeRd3d1I",
            "type": "code",
            "evaluator": "Java",
            "input": {
                "body": [
                    "import java.util.List;",
                    "import java.util.ArrayList;",
                    "",
                    "Plot p = new Plot();",
                    "",
                    "p.setTitle(\"this is a Java plot\");",
                    "",
                    "Bars b = new Bars();",
                    "",
                    "List<Number> yList = new ArrayList<Number>();",
                    "yList.add(2);",
                    "yList.add(5);",
                    "yList.add(4);",
                    "yList.add(8);",
                    "",
                    "b.setY(yList);",
                    "b.setColori(Color.orange);",
                    "b.setWidth(0.5);",
                    "",
                    "p.add(b);",
                    "  ",
                    "return p;"
                ]
            },
            "output": {
                "state": {
                    "showAllItems": true,
                    "plotSize": {
                        "width": 640,
                        "height": 480
                    },
                    "focus": {
                        "xl": 0.4738095238095238,
                        "xr": 0.5261904761904762,
                        "yl": 0.4738095238095238,
                        "yr": 0.5261904761904762,
                        "xspan": 0.05238095238095242,
                        "yspan": 0.05238095238095242
                    },
                    "lodOn": [
                        null
                    ],
                    "lodType": [
                        null
                    ],
                    "lodAuto": [
                        null
                    ],
                    "zoomHash": [
                        null
                    ],
                    "showItem": [
                        true
                    ],
                    "visibleItem": 1,
                    "legendableItem": 0,
                    "defaultFocus": {
                        "xl": 0.4738095238095238,
                        "xr": 0.5261904761904762,
                        "yl": 0.4738095238095238,
                        "yr": 0.5261904761904762,
                        "xspan": 0.05238095238095242,
                        "yspan": 0.05238095238095242
                    }
                },
                "result": {
                    "type": "Plot",
                    "init_width": 640,
                    "init_height": 480,
                    "chart_title": "this is a Java plot",
                    "domain_axis_label": null,
                    "y_label": "",
                    "show_legend": false,
                    "use_tool_tip": true,
                    "graphics_list": [
                        {
                            "type": "Bars",
                            "x": [
                                0,
                                1,
                                2,
                                3
                            ],
                            "y": [
                                2,
                                5,
                                4,
                                8
                            ],
                            "visible": true,
                            "display_name": "",
                            "base": 0,
                            "width": 0.5,
                            "color": "#FFFFC800",
                            "outline_color": null
                        }
                    ],
                    "constant_lines": [],
                    "constant_bands": [],
                    "texts": [],
                    "rangeAxes": [
                        {
                            "type": "YAxis",
                            "auto_range": true,
                            "auto_range_includes_zero": true,
                            "lower_margin": 0.05,
                            "upper_margin": 0.05,
                            "lower_bound": 0,
                            "upper_bound": 0,
                            "log": false
                        }
                    ],
                    "x_auto_range": true,
                    "x_lower_margin": 0.05,
                    "x_upper_margin": 0.05,
                    "x_lower_bound": 0,
                    "x_upper_bound": 0,
                    "y_auto_range": true,
                    "y_auto_range_includes_zero": true,
                    "y_lower_margin": 0.05,
                    "y_upper_margin": 0.05,
                    "y_lower_bound": 0,
                    "y_upper_bound": 0,
                    "log_x": false,
                    "log_y": false,
                    "time_zone": null,
                    "crosshair": null
                },
                "selectedType": "Plot",
                "elapsedTime": 104
            },
            "evaluatorReader": true,
            "lineCount": 22
        }
    ],
    "namespace": {
        "autovariable": "test for autotranslation"
    }
}
