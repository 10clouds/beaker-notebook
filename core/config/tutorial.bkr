{
    "beaker": "2",
    "evaluators": [
        {
            "name": "Html",
            "plugin": "Html",
            "view": {
                "cm": {
                    "mode": "htmlmixed"
                }
            }
        },
        {
            "name": "Latex",
            "plugin": "Latex",
            "view": {
                "cm": {
                    "mode": "stex"
                }
            }
        },
        {
            "name": "IPython",
            "plugin": "IPython",
            "imports": "",
            "supplementalClassPath": "",
            "view": {
                "cm": {
                    "mode": "python",
                    "background": "#EAEAFF"
                }
            }
        },
        {
            "name": "JavaScript",
            "plugin": "JavaScript",
            "jsSetting2": "",
            "jsSetting1": "",
            "view": {
                "cm": {
                    "mode": "javascript",
                    "background": "#FFE0F0"
                }
            }
        },
        {
            "name": "R",
            "plugin": "R",
            "view": {
                "cm": {
                    "mode": "r",
                    "background": "#C0CFF0"
                }
            }
        },
        {
            "name": "Groovy",
            "plugin": "Groovy",
            "view": {
                "cm": {
                    "mode": "groovy",
                    "background": "#E0FFE0"
                }
            }
        }
    ],
    "cells": [
        {
            "id": "section001",
            "type": "section",
            "level": 1,
            "title": "Tutorial",
            "collapsed": false,
            "evaluatorReader": false
        },
        {
            "id": "codewQAk41",
            "type": "code",
            "evaluator": "Html",
            "input": {
                "body": "<style>\n  .tut-cell {\n    border:1px solid gray;\n    padding: 10px;\n  }\n  .tut-row {\n    padding: 10px;\n  }\n</style>\n<div class=\"row-fluid\">\n\n  <div class=\"span9\">\n\n\t<p>Beaker is a code notebook application that allows you to analyze, visualize, and document data using multiple programming languages. Beaker's plugin-based polyglot architecture enables you to seamlessly move data between languages with autotranslation.</p>\n\n    <p>Official website: <a href='http://beakernotebook.com'>http://BeakerNotebook.com</a>\n    \n    <h4>Language support</h4>\n\n    <p><strong>Text:</strong> Markdown, HTML, LaTeX, and plain text.</p>\n    <p><strong>Code:</strong> Python (IPython), Julia, JavaScript, Ruby, Node, R, and Groovy.  \n      For each language we have two different tutorials, one showing what the language is good for (the first row in the table below), and another cataloging the primtive operations available in the language (linked from the 2nd row of the table).</p>\n    <table>\n      <tr><td class=\"tut-row\">Demos and Examples</td>\n          <td class=\"tut-cell\"><a href=\"#/open?uri=file:config%2Ftutorials%2Fipython-examples.bkr\">IPython</a></td>\n          <td class=\"tut-cell\"><a href=\"#/open?uri=file:config%2Ftutorials%2Fr-examples.bkr\">R</a></td>\n          <td class=\"tut-cell\"><a href=\"#/open?uri=file:config%2Ftutorials%2Fgroovy-examples.bkr\">Groovy</a></td>\n      </tr>\n      <tr><td class=\"tut-row\">Basics and Fundamentals</td>\n          <td class=\"tut-cell\">IPython</td>\n          <td class=\"tut-cell\"><a href=\"#/open?uri=file:config%2Ftutorials%2Fr.bkr\">R</a></td>\n          <td class=\"tut-cell\"><a href=\"#/open?uri=file:config%2Ftutorials%2Fgroovy.bkr\">Groovy</a></td>\n      </tr>\n    </table>\n\n    <h4>Plugins</h4>\n\n\t<p>All of the languages available in Beaker are added via plugins, so if we've missed your favorite language, you can create a plugin, and it will be treated as a first-class citizen.  Plugins can also easily extend the menus and output media types.</p>\n    \n    <h4>Open source</h4>\n\n\t<p>Beaker's full source code and documentation is available on <a href='https://github.com/twosigma/beaker-notebook'>GitHub</a> under the Apache 2.0 license.</p>    \n    \n  </div>  \n  \n  \n  <div class=\"span3\">\n    <h4>Additional tutorials</h4>\n    <ul>\n    \n    <li><a href=\"#/open?uri=file:config%2Ftutorials%2Fform.bkr\">Basic forms in Beaker</a>\n    <li><a href=\"#/open?uri=ipynb:%2Fhttp:%2F%2Fatwallab.cshl.edu%2Fteaching%2FQBbootcamp3.ipynb\">Scientific Computing with Python</a> from Mickey Atwal\n    <li><a href=\"\">Autotranslation</a>\n    <li><a href=\"\">Charting</a>\n    <li><a href=\"\">Working with d3.js</a>\n                                                                                                                                     \n    </ul>\n  </div>\n</div>",
                "hidden": true
            },
            "output": {
                "selectedType": "BeakerDisplay",
                "elapsedTime": 63,
                "result": {
                    "type": "BeakerDisplay",
                    "innertype": "Html",
                    "object": "<style>\n  .tut-cell {\n    border:1px solid gray;\n    padding: 10px;\n  }\n  .tut-row {\n    padding: 10px;\n  }\n</style>\n<div class=\"row-fluid\">\n\n  <div class=\"span9\">\n\n\t<p>Beaker is a code notebook application that allows you to analyze, visualize, and document data using multiple programming languages. Beaker's plugin-based polyglot architecture enables you to seamlessly move data between languages with autotranslation.</p>\n\n    <p>Official website: <a href='http://beakernotebook.com'>http://BeakerNotebook.com</a>\n    \n    <h4>Language support</h4>\n\n    <p><strong>Text:</strong> Markdown, HTML, LaTeX, and plain text.</p>\n    <p><strong>Code:</strong> Python (IPython), Julia, JavaScript, Ruby, Node, R, and Groovy.  \n      For each language we have two different tutorials, one showing what the language is good for (the first row in the table below), and another cataloging the primtive operations available in the language (linked from the 2nd row of the table).</p>\n    <table>\n      <tr><td class=\"tut-row\">Demos and Examples</td>\n          <td class=\"tut-cell\"><a href=\"#/open?uri=file:config%2Ftutorials%2Fipython-examples.bkr\">IPython</a></td>\n          <td class=\"tut-cell\"><a href=\"#/open?uri=file:config%2Ftutorials%2Fr-examples.bkr\">R</a></td>\n          <td class=\"tut-cell\"><a href=\"#/open?uri=file:config%2Ftutorials%2Fgroovy-examples.bkr\">Groovy</a></td>\n      </tr>\n      <tr><td class=\"tut-row\">Basics and Fundamentals</td>\n          <td class=\"tut-cell\">IPython</td>\n          <td class=\"tut-cell\"><a href=\"#/open?uri=file:config%2Ftutorials%2Fr.bkr\">R</a></td>\n          <td class=\"tut-cell\"><a href=\"#/open?uri=file:config%2Ftutorials%2Fgroovy.bkr\">Groovy</a></td>\n      </tr>\n    </table>\n\n    <h4>Plugins</h4>\n\n\t<p>All of the languages available in Beaker are added via plugins, so if we've missed your favorite language, you can create a plugin, and it will be treated as a first-class citizen.  Plugins can also easily extend the menus and output media types.</p>\n    \n    <h4>Open source</h4>\n\n\t<p>Beaker's full source code and documentation is available on <a href='https://github.com/twosigma/beaker-notebook'>GitHub</a> under the Apache 2.0 license.</p>    \n    \n  </div>  \n  \n  \n  <div class=\"span3\">\n    <h4>Additional tutorials</h4>\n    <ul>\n    \n    <li><a href=\"#/open?uri=file:config%2Ftutorials%2Fform.bkr\">Basic forms in Beaker</a>\n    <li><a href=\"#/open?uri=ipynb:%2Fhttp:%2F%2Fatwallab.cshl.edu%2Fteaching%2FQBbootcamp3.ipynb\">Scientific Computing with Python</a> from Mickey Atwal\n    <li><a href=\"\">Autotranslation</a>\n    <li><a href=\"\">Charting</a>\n    <li><a href=\"\">Working with d3.js</a>\n                                                                                                                                     \n    </ul>\n  </div>\n</div>"
                }
            },
            "evaluatorReader": true,
            "lineCount": 59
        },
        {
            "id": "Section8EWbZ9",
            "type": "section",
            "level": 1,
            "title": "Running code",
            "collapsed": false,
            "evaluatorReader": false
        },
        {
            "id": "textKDdmxf",
            "type": "text",
            "body": "Below is some IPython code. To run it, move your cursor into the cell, click, and then press CTRL-ENTER or click on the \"Run\" button.<div><br></div><div>The output from running a cell appears right below the input.</div>",
            "evaluatorReader": false
        },
        {
            "id": "codeh1TYII",
            "type": "code",
            "evaluator": "IPython",
            "input": {
                "body": "a = 1\na"
            },
            "output": {
                "selectedType": "BeakerDisplay",
                "outputArrived": true,
                "elapsedTime": 119
            },
            "evaluatorReader": true,
            "lineCount": 2
        },
        {
            "id": "textmEdrvq",
            "type": "text",
            "body": "And here's a basic histogram from matplotlib:",
            "evaluatorReader": false
        },
        {
            "id": "code3E0zXv",
            "type": "code",
            "evaluator": "IPython",
            "input": {
                "body": "hist([1,2,2])"
            },
            "output": {
                "selectedType": "Hidden",
                "outputArrived": true,
                "elapsedTime": 364
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "Section2enUlh",
            "type": "section",
            "level": 1,
            "title": "Working with cells",
            "collapsed": false,
            "evaluatorReader": false
        },
        {
            "id": "SectionIQvToW",
            "type": "section",
            "level": 2,
            "title": "Adding cells",
            "collapsed": false,
            "evaluatorReader": false
        },
        {
            "id": "textJwyp0v",
            "type": "text",
            "body": "<div>Move your cursor to the area below this text. You'll see a blue bar appear with the text 'Insert Cell.' Click on that bar and add a new IPython cell. &nbsp;It uses the language of the previous code cell in the notebook, which in this case is IPython.</div><div><br></div><div>If you want to create a cell of a different language or type, then click on the right side of the bar on the triangle.</div><div><br></div><div>Click into the new cell and press CTRL-SHIFT-A. This will create a new cell of the same type.</div>",
            "evaluatorReader": false
        },
        {
            "id": "SectionkfKSFY",
            "type": "section",
            "level": 2,
            "title": "Manipulating cells",
            "collapsed": false,
            "evaluatorReader": false
        },
        {
            "id": "textOYea2S",
            "type": "text",
            "body": "<div>Move your cursor into a code cell. Pressing the UP and DOWN arrow keys will move your cursor from line to line within the cell, and then from cell to cell if you keep going over the edge.</div><div><br></div><div>Pressing CTRL-SHIFT-E within a code cell will allow you to change the cell's language.</div><div><br></div><div>In the top-right corner of the cell are some icons with common operations including deleting, moving the cell up and down, and three dots for a menu with more actions. &nbsp;Code cells have toggles to hide or show the input and output areas.</div>",
            "evaluatorReader": false
        },
        {
            "id": "SectionEt3gzB",
            "type": "section",
            "level": 2,
            "title": "Section cells",
            "collapsed": false,
            "evaluatorReader": false
        },
        {
            "id": "textMULqPW",
            "type": "text",
            "body": "<div>Notice that all the headings have +/- toggles on them. These are 'section cells' in Beaker, and they can contain any number of cells including other sections. There are four levels of heading, so you can organize your notebook in a tree and hide the parts you don't need. &nbsp;Try clicking the +/- buttons to get a feel for how the hierarchy works. &nbsp;The View&nbsp;<span style=\"font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; line-height: 22.3999996185303px;\">→ Show Hierarchy menu makes the Hierarchy visible, including auto-numbering the sections.</span></div><div><br></div><div>Each section has a three-dot menu on the right side of the screen with operations that pertain to it, including Sharing, running all the cells in it, &nbsp;and changing its header level.</div><div><br></div><div>You can add sections with the usual Insert Cell menu.</div>",
            "evaluatorReader": false
        },
        {
            "id": "section2qVNos",
            "type": "section",
            "title": "Autotranslation: Communicating among languages",
            "level": 1,
            "collapsed": false,
            "evaluatorReader": false
        },
        {
            "id": "textNi07gO",
            "type": "text",
            "body": "<div>Beaker provides a namespace (a collection of variables and their values) in the notebook.</div><div><br></div><div>You can use it to produce data in one language and then consume or process it in another.</div>",
            "evaluatorReader": false
        },
        {
            "id": "codeMXyZnW",
            "type": "code",
            "evaluator": "IPython",
            "input": {
                "body": "beaker.set('x', \"any value even a dict or data frame\")"
            },
            "output": {
                "selectedType": "Hidden",
                "outputArrived": false,
                "elapsedTime": 168
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "code4NkMTF",
            "type": "code",
            "evaluator": "R",
            "input": {
                "body": "beaker::get('x')"
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 197
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "codeuP2kh6",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": "beaker.y = {a:1, b:2.2, c:\"three\"};"
            },
            "output": {
                "selectedType": "Hidden"
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "codeeLdoVF",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": "beaker.get('y')"
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 395
            },
            "evaluatorReader": true,
            "lineCount": 1
        },
        {
            "id": "markdown6c1oNJ",
            "type": "markdown",
            "body": "The values are stored in the notebook including when it is saved to disk.\n\nThe format for interchange and storage is JSON.",
            "mode": "preview",
            "evaluatorReader": false
        }
    ],
    "namespace": {
        "x": "any value even a dict or data frame",
        "df": {
            "A": [
                1,
                1,
                4
            ],
            "B": [
                9,
                8,
                6
            ]
        },
        "y": {
            "a": 1,
            "b": 2.2,
            "c": "three"
        }
    }
}
