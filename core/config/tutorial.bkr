{
    "beaker": "2",
    "evaluators": [
        {
            "name": "Html",
            "plugin": "Html",
            "shellID": null,
            "view": {
                "cm": {
                    "mode": "htmlmixed"
                }
            }
        },
        {
            "name": "Latex",
            "plugin": "Latex",
            "shellID": null,
            "view": {
                "cm": {
                    "mode": "stex"
                }
            }
        },
        {
            "name": "IPython",
            "plugin": "IPython",
            "shellID": "6DAE0DC7AF064A438CBEB0BE52548E42",
            "imports": "",
            "supplementalClassPath": "",
            "view": {
                "cm": {
                    "mode": "python",
                    "background": "#EAEAFF"
                }
            }
        },
        {
            "name": "JavaScript",
            "plugin": "JavaScript",
            "shellID": null,
            "jsSetting2": "",
            "jsSetting1": "",
            "view": {
                "cm": {
                    "mode": "javascript",
                    "background": "#FFE0F0"
                }
            }
        },
        {
            "name": "R",
            "plugin": "R",
            "shellID": "c4ad7947-cad7-42d2-a9a6-5ce56341d4fe",
            "view": {
                "cm": {
                    "mode": "r",
                    "background": "#C0CFF0"
                }
            }
        },
        {
            "name": "Groovy",
            "plugin": "Groovy",
            "shellID": "24acc31c-e945-411c-b824-4664b640c927",
            "view": {
                "cm": {
                    "mode": "groovy",
                    "background": "#E0FFE0"
                }
            }
        }
    ],
    "cells": [
        {
            "id": "section001",
            "type": "section",
            "level": 1,
            "title": "Beaker Tutorial",
            "collapsed": false
        },
        {
            "id": "codewQAk41",
            "type": "code",
            "evaluator": "Html",
            "input": {
                "body": "<div class=\"row-fluid\">\n\n  <div class=\"span9\">\n\n\t<p>Beaker is a code notebook that allows you to analyze, visualize, and document data using multiple programming languages. Beaker's plugin-based polyglot architecture enables you to seamlessly switch between languages in your documents and add support for your favorite languages that we've missed.</p>\n\n    <p>Official website: <a href='http://beakernotebook.com'>http://BeakerNotebook.com</a>\n    \n    <h4>Language support</h4>\n\n    <p><strong>Text:</strong> Markdown, HTML, LaTeX, plain text</p>\n\n    <p><strong>Code:</strong> Python (IPython), Julia, JavaScript, Ruby, Node, R, Groovy</p>\n\n    <h4>Plugins</h4>\n\n\t<p>All of the languages available in Beaker are added via plugins, so if we've missed your favorite language, you can create a plugin, and it will be treated as a first-class citizen.</p>\n    \n    <h4>Open source</h4>\n\n\t<p>Beaker's full source code and documentation is available on <a href='https://github.com/twosigma/beaker-notebook'>GitHub</a> under the Apache 2.0 license.</p>    \n    \n  </div>  \n  \n  \n  <div class=\"span3\">\n    <h3>Additional tutorials</h3>\n    <h4>Beaker</h4>\n    <p><a href=\"#/open?uri=file:config%2Ftutorials%2Fform.bkr\">Basic forms in Beaker</a> </p>\n\n    <h4>Python</h4>\n    <a href=\"#/open?uri=ipynb:%2Fhttp:%2F%2Fatwallab.cshl.edu%2Fteaching%2FQBbootcamp3.ipynb\">Scientific Computing with Python</a> - From Mickey Atwal\n    \n    <h4>R</h4>\n    <p><a href=\"#/open?uri=file:config%2Ftutorials%2Fr.bkr\">R basics</a> </p>\n\n    <h4>Groovy</h4>\n    <p><a href=\"#/open?uri=file:config%2Ftutorials%2Fgroovy.bkr\">Groovy basics</a> </p>\n  </div>  \n\n  \n</div>",
                "hidden": true
            },
            "output": {
                "selectedType": "BeakerDisplay",
                "elapsedTime": 369,
                "result": {
                    "type": "BeakerDisplay",
                    "innertype": "Html",
                    "object": "<div class=\"row-fluid\">\n\n  <div class=\"span9\">\n\n\t<p>Beaker is a code notebook that allows you to analyze, visualize, and document data using multiple programming languages. Beaker's plugin-based polyglot architecture enables you to seamlessly switch between languages in your documents and add support for your favorite languages that we've missed.</p>\n\n    <p>Official website: <a href='http://beakernotebook.com'>http://BeakerNotebook.com</a>\n    \n    <h4>Language support</h4>\n\n    <p><strong>Text:</strong> Markdown, HTML, LaTeX, plain text</p>\n\n    <p><strong>Code:</strong> Python (IPython), Julia, JavaScript, Ruby, Node, R, Groovy</p>\n\n    <h4>Plugins</h4>\n\n\t<p>All of the languages available in Beaker are added via plugins, so if we've missed your favorite language, you can create a plugin, and it will be treated as a first-class citizen.</p>\n    \n    <h4>Open source</h4>\n\n\t<p>Beaker's full source code and documentation is available on <a href='https://github.com/twosigma/beaker-notebook'>GitHub</a> under the Apache 2.0 license.</p>    \n    \n  </div>  \n  \n  \n  <div class=\"span3\">\n    <h3>Additional tutorials</h3>\n    <h4>Beaker</h4>\n    <p><a href=\"#/open?uri=file:config%2Ftutorials%2Fform.bkr\">Basic forms in Beaker</a> </p>\n\n    <h4>Python</h4>\n    <a href=\"#/open?uri=ipynb:%2Fhttp:%2F%2Fatwallab.cshl.edu%2Fteaching%2FQBbootcamp3.ipynb\">Scientific Computing with Python</a> - From Mickey Atwal\n    \n    <h4>R</h4>\n    <p><a href=\"#/open?uri=file:config%2Ftutorials%2Fr.bkr\">R basics</a> </p>\n\n    <h4>Groovy</h4>\n    <p><a href=\"#/open?uri=file:config%2Ftutorials%2Fgroovy.bkr\">Groovy basics</a> </p>\n  </div>  \n\n  \n</div>"
                }
            }
        },
        {
            "id": "Section8EWbZ9",
            "type": "section",
            "level": 1,
            "title": "Running code",
            "collapsed": false
        },
        {
            "id": "markdownEmlByI",
            "type": "markdown",
            "body": "Here's some IPython code. To run it, move your cursor into the cell and press CTRL-ENTER.",
            "mode": "preview"
        },
        {
            "id": "codeh1TYII",
            "type": "code",
            "evaluator": "IPython",
            "input": {
                "body": "a = 1\na"
            },
            "output": {
                "selectedType": "Hidden",
                "outputArrived": true,
                "elapsedTime": 154
            }
        },
        {
            "id": "markdownCInWzc",
            "type": "markdown",
            "body": "And here's a basic histogram from matplotlib.",
            "mode": "preview"
        },
        {
            "id": "code3E0zXv",
            "type": "code",
            "evaluator": "IPython",
            "input": {
                "body": "hist([1,2,2])"
            },
            "output": {
                "selectedType": "Hidden",
                "outputArrived": true,
                "elapsedTime": 364
            }
        },
        {
            "id": "Section2enUlh",
            "type": "section",
            "level": 1,
            "title": "Working with cells",
            "collapsed": false
        },
        {
            "id": "SectionIQvToW",
            "type": "section",
            "level": 2,
            "title": "Adding cells",
            "collapsed": false
        },
        {
            "id": "markdownDfaAFR",
            "type": "markdown",
            "body": "Move your cursor to the area below this text. You'll see a bar appear with the text 'insert cell.' Click on that bar and add a new JavaScript cell.\n\nClick into the new cell and press CTRL-SHIFT-A. This will create a new cell of the same type.\n\n",
            "mode": "preview"
        },
        {
            "id": "SectionkfKSFY",
            "type": "section",
            "level": 2,
            "title": "Manipulating cells",
            "collapsed": false
        },
        {
            "id": "markdownB58chY",
            "type": "markdown",
            "body": "Move your cursor into one of our JavaScript cells. Note that using the UP and DOWN keys will move your cursor between the different code cells. \n\nPressing CTRL-SHIFT-E within a code cell will allow you to change the cell's language.\n\nTo the right of the cells, you'll see a hierarchical representation of brackets. Clicking on the brackets will bring up menus that let you do everything from change languages to hiding output to deleting cells. Explore the options available in these menus.",
            "mode": "preview"
        },
        {
            "id": "SectionEt3gzB",
            "type": "section",
            "level": 2,
            "title": "Section cells",
            "collapsed": false
        },
        {
            "id": "markdownso9XEe",
            "type": "markdown",
            "body": "Notice that all the headings have +/- toggles on them. These are 'section cells' in Beaker, and they can contain any type of cell including other sections. Try clicking the +/- buttons to get a feel for how the hierarchy works and how it corresponds to the bracket menus on the right.\n\nTry adding and removing some section cells of different levels.",
            "mode": "preview"
        },
        {
            "id": "SectionpjDGkv",
            "type": "section",
            "level": 1,
            "title": "R examples",
            "collapsed": false
        },
        {
            "id": "codeGXkj8Z",
            "type": "code",
            "evaluator": "Html",
            "input": {
                "body": "<p>For more examples, see the <a href=\"#/open?uri=file:config%2Ftutorials%2Fr.bkr\">R basics tutorial</a> </p>",
                "hidden": true
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 0
            }
        },
        {
            "id": "codeHZjtj9",
            "type": "code",
            "evaluator": "R",
            "input": {
                "body": "data <- c(1,1,1,2,3,3,4,5,5,5)"
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 221
            }
        },
        {
            "id": "codeY69oh7",
            "type": "code",
            "evaluator": "R",
            "input": {
                "body": "hist(data)"
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 309
            }
        },
        {
            "id": "code9i3xs2",
            "type": "code",
            "evaluator": "R",
            "input": {
                "body": "DF = data.frame(x=c(\"b\",\"b\",\"b\",\"a\",\"a\"),v=rnorm(5))"
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 523
            }
        },
        {
            "id": "codeZCInZV",
            "type": "code",
            "evaluator": "R",
            "input": {
                "body": "library(ggplot2)\nqplot(1:10, data)"
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 1249
            }
        },
        {
            "id": "codezB5I5w",
            "type": "code",
            "evaluator": "R",
            "input": {
                "body": "library(ggplot2)\ncde <- geom_histogram(position=\"fill\", binwidth = 500)\nggplot(diamonds, aes(x=price, fill=clarity)) + cde"
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 1253
            }
        },
        {
            "id": "coden2V0oT",
            "type": "code",
            "evaluator": "R",
            "input": {
                "body": "occur <- matrix(c(4,3,2),ncol=3,byrow=TRUE)\ncolnames(occur) <- c(\"A\",\"B\",\"C\")\noccur"
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 126
            }
        },
        {
            "id": "codenl0dfP",
            "type": "code",
            "evaluator": "R",
            "input": {
                "body": "a <- c(\"Sometimes\",\"Sometimes\",\"Never\",\"Always\",\"Always\",\"Sometimes\",\"Sometimes\",\"Never\")\nb <- c(\"Maybe\",\"Maybe\",\"Yes\",\"Maybe\",\"Maybe\",\"No\",\"Yes\",\"No\")\nresults <- table(a,b)"
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 146
            }
        },
        {
            "id": "SectionpfjX2U",
            "type": "section",
            "level": 1,
            "title": "Python examples",
            "collapsed": false
        },
        {
            "id": "codeqPMAfv",
            "type": "code",
            "evaluator": "IPython",
            "input": {
                "body": "import pandas\ndf = pandas.DataFrame([[1, 2], [1, 3], [4, 6]], columns=['A', 'B'])\n# cause the dataframe to be displayed as a table.\n# the value of only the last line is shown, and in python the value\n# of an assignment (like the previous line) has no value.\ndf"
            },
            "output": {
                "selectedType": "Hidden",
                "outputArrived": true,
                "elapsedTime": 366
            }
        },
        {
            "id": "codeK0EmdK",
            "type": "code",
            "evaluator": "IPython",
            "input": {
                "body": "df['A']"
            },
            "output": {
                "selectedType": "Hidden",
                "outputArrived": true,
                "elapsedTime": 434
            }
        },
        {
            "id": "codeDF97hS",
            "type": "code",
            "evaluator": "IPython",
            "input": {
                "body": "df['A'].hist(figsize=(10,10))"
            },
            "output": {
                "selectedType": "Hidden",
                "outputArrived": true,
                "elapsedTime": 761
            }
        },
        {
            "id": "codeAEuaJ8",
            "type": "code",
            "evaluator": "IPython",
            "input": {
                "body": "plot([1,4,3,5,2])"
            },
            "output": {
                "selectedType": "Hidden",
                "outputArrived": true,
                "elapsedTime": 458
            }
        },
        {
            "id": "sectionF7ZQVV",
            "type": "section",
            "title": "Groovy examples",
            "level": 1,
            "collapsed": false
        },
        {
            "id": "code88rlLh",
            "type": "code",
            "evaluator": "Html",
            "input": {
                "body": "<p>For more examples, see the <a href=\"#/open?uri=file:config%2Ftutorials%2Fgroovy.bkr\">Groovy basics tutorial</a> </p>",
                "hidden": true
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 0
            }
        },
        {
            "id": "codelwaUwX",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": "def a = 1 //local variable\nb = 2 //global variable"
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 557
            }
        },
        {
            "id": "codeiXI4Hu",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": "a //error"
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 156
            }
        },
        {
            "id": "codeZsp72T",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": "b //this works"
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 233
            }
        },
        {
            "id": "codeyiu160",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": "//closure example\ntimesTwo = {x -> x*2}"
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 193
            }
        },
        {
            "id": "code0SVic5",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": "timesTwo(4)"
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 174
            }
        },
        {
            "id": "codexiOErG",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": "timesTwo(\"Multiplying Strings!\")"
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 164
            }
        },
        {
            "id": "code77FYkc",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": "l = [1,2,3,4] //list\nm = [a:1, b:2] //map"
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 206
            }
        },
        {
            "id": "section2qVNos",
            "type": "section",
            "title": "Communicating among languages",
            "level": 1,
            "collapsed": false
        },
        {
            "id": "markdownxQBZcY",
            "type": "markdown",
            "body": "Beaker provides a namespace (a collection of variables and their values) in the notebook.\n\nYou can use it to produce data in one language and then consume or process it in another.",
            "mode": "preview"
        },
        {
            "id": "codeMXyZnW",
            "type": "code",
            "evaluator": "IPython",
            "input": {
                "body": "beaker.set('x', \"any value even a dict or data frame\")"
            },
            "output": {
                "selectedType": "Hidden",
                "outputArrived": false,
                "elapsedTime": 168
            }
        },
        {
            "id": "code4NkMTF",
            "type": "code",
            "evaluator": "R",
            "input": {
                "body": "beaker::get('x')"
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 197
            }
        },
        {
            "id": "codeuP2kh6",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": "beaker.y = {a:1, b:2.2, c:\"three\"};"
            },
            "output": {
                "selectedType": "Hidden"
            }
        },
        {
            "id": "codeeLdoVF",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": "beaker.get('y')"
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 395
            }
        },
        {
            "id": "markdown6c1oNJ",
            "type": "markdown",
            "body": "The values are stored in the notebook including when it is saved to disk.\n\nThe format for interchange and storage is JSON.",
            "mode": "preview"
        },
        {
            "id": "Sectionviqq24",
            "type": "section",
            "level": 1,
            "title": "Working with d3.js",
            "collapsed": false
        },
        {
            "id": "markdownmEE28X",
            "type": "markdown",
            "body": "This example loads some data using Python then builds a bar chart of the data using d3 in HTML and JavaScript cells.",
            "mode": "preview"
        },
        {
            "id": "codezCEI2n",
            "type": "code",
            "evaluator": "IPython",
            "input": {
                "body": "import pandas\ndf = pandas.DataFrame([[1, 9], [1, 8], [4, 6]], columns=['A', 'B'])\nbeaker.set('df', df) # copy the dataframe into the notebook and make it accessible to the JS below\ndf"
            },
            "output": {
                "selectedType": "Hidden",
                "outputArrived": true,
                "elapsedTime": 400
            }
        },
        {
            "id": "codeyA37u9",
            "type": "code",
            "evaluator": "Html",
            "input": {
                "body": "<div id=\"barchart1\">After running JS, chart will appear here</div>"
            },
            "output": {
                "selectedType": "Hidden",
                "elapsedTime": 96
            }
        },
        {
            "id": "codetIF8Fx",
            "type": "code",
            "evaluator": "JavaScript",
            "input": {
                "body": "var data = beaker.df.B;\n\nd3.select(\"#barchart1\")\n  \t\t.selectAll(\"div\")\n    \t.data(data)\n  \t\t.enter().append(\"div\")\n    \t.style(\"width\", function(d) { console.log(d);return d * 10 + \"px\"; })\n    \t.style(\"background-color\", function(d) { return \"#0000\" + d + \"0\" })\n    \t.style(\"color\", \"#FFFFFF\")\n    \t.style(\"text-align\", \"right\")\n    \t.style(\"padding\", \"3px\")    \n    \t.style(\"margin\", \"1px\")        \n        .text(function(d) { return d.toString(); });\n"
            },
            "output": {
                "selectedType": "Hidden"
            }
        }
    ],
    "namespace": {
        "x": "any value even a dict or data frame",
        "df": {
            "A": [
                1,
                1,
                4
            ],
            "B": [
                9,
                8,
                6
            ]
        },
        "y": {
            "a": 1,
            "b": 2.2,
            "c": "three"
        }
    }
}
