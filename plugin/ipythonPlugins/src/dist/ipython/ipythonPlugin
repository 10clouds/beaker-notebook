#!/usr/bin/python
#
# Copyright 2014 TWO SIGMA OPEN SOURCE, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import os
import sys
import subprocess
from subprocess import check_output

def detect_cygwin_python():
    if os.name == 'nt':
        version = check_output(["python", "-c", "import sys; print(sys.version)"])
        if version.find("cygming") >= 0:
            print >> sys.stderr, "**********************************************"
            print >> sys.stderr, "It appears that cygwin's python is in your path"
            print >> sys.stderr, "ahead of a python that works with Beaker."
            print >> sys.stderr, "See https://github.com/twosigma/beaker-notebook/wiki/Cygwin-Compatibility"
            print >> sys.stderr, "**********************************************"

if len(sys.argv) > 1:
    arg1 = sys.argv[1]
    if arg1 == "--version":
        os.execlp("ipython", "ipython", "--version")
    elif arg1 == "--hash":
        detect_cygwin_python()
        os.execlp("python", "python")
    elif arg1 == "--profile":
        os.execlp("ipython", "ipython", "profile",
                  "create", "beaker_backend_" + sys.argv[3],
                  "--ipython-dir=" + sys.argv[2])


# set pythonpath to include this directory so we can import beaker_runtime.py
plugin_dir = os.path.dirname(sys.argv[0])
if os.name == 'nt':
    pathsep = ';'
else:
    pathsep = ":"
if "PYTHONPATH" in os.environ:
    old_path = pathsep + os.environ["PYTHONPATH"]
else:
    old_path = ''
os.environ["PYTHONPATH"] = plugin_dir + old_path
if os.name == 'nt':
    subprocess.call(["python", plugin_dir+"/ipythonPluginStart.py"], shell=True, stderr = subprocess.PIPE)
else:
    os.execlp("python", "python", plugin_dir+"/ipythonPluginStart.py")
