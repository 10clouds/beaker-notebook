/*
 *  Copyright 2014 TWO SIGMA OPEN SOURCE, LLC
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
apply plugin: 'java'

repositories {
  mavenCentral()
}

configurations {
  provided
  compile.extendsFrom provided
}

dependencies {
  provided group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.3.6.v20151106'
  provided group: 'org.eclipse.jetty', name: 'jetty-proxy', version: '9.3.6.v20151106'
  provided group: 'org.eclipse.jetty', name: 'jetty-util', version: '9.3.6.v20151106'
  runtime group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.6'
  provided group: 'com.google.guava', name: 'guava', version: '18.0'
  provided group: 'com.sun.jersey', name: 'jersey-servlet', version: '1.19'
  provided group: 'com.sun.jersey', name: 'jersey-server', version: '1.19'
  provided group: 'com.sun.jersey', name: 'jersey-core', version: '1.19'
  provided group: 'org.apache.httpcomponents', name: 'fluent-hc', version: '4.3.1'
  provided project(':shared')
}

compileJava {
  options.compilerArgs << '-Xlint:deprecation'
  options.compilerArgs << '-Xlint:unchecked'
}

task installDist {
  // do nothing, this is a library
}

if (hasProperty('includeDepsInJar')) {
  build.dependsOn jar
  jar {
    // need to remove META-INF/*.SF to use this.
    from {
       (configurations.compile - configurations.provided).collect { it.isDirectory() ? it : zipTree(it).matching{exclude{it.path.contains('META-INF')} } }
    } {
      exclude "META-INF/*.SF"
      exclude "META-INF/*.DSA"
      exclude "META-INF/*.RSA"
    }
  }
}

task realclean
realclean.dependsOn(clean)
