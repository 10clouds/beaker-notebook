/*
 *  Copyright 2014 TWO SIGMA INVESTMENTS, LLC
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

package com.twosigma.beaker.jvm.updater;

import java.util.UUID;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import com.google.common.collect.HashBiMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;

import org.cometd.bayeux.server.BayeuxServer;
import org.cometd.bayeux.server.BayeuxServer.SubscriptionListener;
import org.cometd.bayeux.server.LocalSession;
import org.cometd.bayeux.server.ServerChannel;
import org.cometd.bayeux.server.ServerSession;

import com.twosigma.beaker.Platform;

public class UpdateManager
    implements SubscriptionListener
{
    private static final Pattern PATTERN = Pattern.compile("^/object_update/((\\w|-)+)$");
    private static final UpdateManager INSTANCE;
    static {
        INSTANCE = new UpdateManager();
    }
    private HashBiMap<String, Object> _idToObject;
    private LocalSession _localSession;
    public static UpdateManager getInstance() {
        return INSTANCE;
    }
    private UpdateManager() {
        BayeuxServer bayeuxServer = Platform.getInjector().getInstance(BayeuxServer.class);
        bayeuxServer.addListener(this);
        _localSession = bayeuxServer.newLocalSession(this.getClass().getCononicalName());
        _localSession.handshake();
        _idToObject = HashBiMap.<String, Object>create();
    }
}
