/*
 *      Copyright (c) 2013 Two Sigma Investments, LLC.
 *      All Rights Reserved
 *
 *      THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF
 *      Two Sigma Investments, LLC.
 *
 *      The copyright notice above does not evidence any
 *      actual or intended publication of such source code.
 */

package com.twosigma.beaker.jvm.object;

import java.util.Observable;

import org.codehaus.jackson.annotate.JsonProperty;

/**
 * Abstraction around an evaluation, for communication of the state
 * over REST to the plugin.
 */
public class SimpleEvaluationObject
    extends Observable
{
    private EvaluationStatus _status;

    private EvaluationResult _result;

    private final String _expression;

    public SimpleEvaluationObject(String expression) {
	_expression = expression;
	_status = EvaluationStatus.QUEUED;
    }

    public synchronized void started() {
	_status = EvaluationStatus.RUNNING;
	setChanged();
	notifyObservers();
    }

    public synchronized void finished(Object result) {
	_status = EvaluationStatus.FINISHED;
	_result = new EvaluationResult(result);
	setChanged();
	notifyObservers();
    }

    public synchronized void error(Object result) {
	_status = EvaluationStatus.ERROR;
	_result = new EvaluationResult(result);
	setChanged();
	notifyObservers();
    }

    @JsonProperty("expression")
    public String getExpression() {
	return _expression;
    }

    @JsonProperty("status")
    public synchronized EvaluationStatus getStatus() {
	return _status;
    }

    @JsonProperty("result")
    public synchronized EvaluationResult getResult() {
	return _result;
    }


    public static enum EvaluationStatus {
	QUEUED, RUNNING, FINISHED, ERROR
    }
}
